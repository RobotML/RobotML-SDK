[comment encoding = UTF-8 /]
[module generate_Datatype_file('http://www.eclipse.org/uml2/3.0.0/UML')]
[import org::eclipse::robotml::generators::acceleo::mmqueries::DataTypeQueries /]
[import org::eclipse::robotml::generators::acceleo::mmqueries::GeneralQueries /]
[import org::eclipse::robotml::generators::acceleo::mmqueries::ArchitectureQueries /]
[import org::eclipse::acceleo::module::OrocosGenerator::mmqueries::OrocosQueries/]

[template public generate_Datatype_file(c : Class, m: Model)]
[for (elt : Element | getDataTypesInClass(c))]
[let type: Type = elt]
[if(isRobotMLDataType(m, type.name)  = false)]
[file ( 'src/DataTypes/'+type.name.substitute(' ', '_')+'.hpp', false, 'UTF-8')]
#ifndef _[type.name.toUpper()/]_DATATYPES_H_
#define _[type.name.toUpper()/]_DATATYPES_H_
#endif // _[type.name.toUpper()/]_DATATYPES_H_
[/file]
[/if]
[/let]
[/for]
[comment]


 
[for (elt : Element | model.allOwnedElements())] 
[for (property : Property |getProperties1(elt))]
	[setDataTypesLibraries(property)/] 
[/for]
[/for] 
namespace [dt.name.substitute(' ','_')/]Types{

[for (elt : Element | model.getElementsDataType())]

[let n: NamedElement = elt]
typedef struct{
[/comment]

[comment datatypes attributes /]
[comment]
[for (property : Property |getProperties1(elt))]
    [let type :Type = property.type]
	[if (getParentType(property).toString().contains('sensor') or getParentType(property).toString().contains('std')
			or getParentType(property).toString().contains('geometry') or getParentType(property).toString().contains('nav')
			or getParentType(property).toString().contains('actionLib') or getParentType(property).toString().contains('stereo'))]
	[property.visibility/] [getParentType(property).toString()/]::[type.name.toLower()/] [property.name/];
	[/if]
	[if (isRobotMLDataType(model,type.name) = false)]
	[property.visibility/] [type.name.toLower()/] [property.name/];
	[/if]
	[/let]
[/for]
}[n.name.substituteAll(' ', '_')/];
[addDataType(n.name.toString())/] 
[/let]
[/for]
}

[/comment]
[/template]
