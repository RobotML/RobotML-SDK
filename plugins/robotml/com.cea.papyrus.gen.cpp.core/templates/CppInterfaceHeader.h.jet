<%@ jet package		=	"com.cea.papyrus.gen.cpp.core.jet" 
	skeleton        =   "generator.skeleton" 
	imports			=	"org.eclipse.uml2.uml.Interface org.eclipse.uml2.uml.Package com.cea.papyrus.gen.cpp.core.CppStereo com.cea.papyrus.gen.cpp.core.utils.GenUtils com.cea.papyrus.gen.cpp.core.jet.util.* com.cea.papyrus.gen.cpp.core.jet.doc.*" 
 	class			=	"CppInterfaceHeader" 
 %>
<%
//////////////////////////////////////////////////////////////////////////////////////////
// Java preparation
//////////////////////////////////////////////////////////////////////////////////////////
	
	// Retrieve the class
	Interface currentInterface		= (Interface) argument;
	
	// Get the package name
	String interfaceName     = currentInterface.getName();
	String interfaceFULLNAME = GenUtils.getFullName (currentInterface).toUpperCase();
	String openNS            = GenUtils.openNS (currentInterface); 
	String closeNS		     = GenUtils.closeNS (currentInterface); 
	
	// For interface documentation
	String iDoc		= "";
	
	// Retrieve enum doc
	CppElementDoc jDoc		= new CppElementDoc();
	iDoc					= jDoc.generate(currentInterface);
	
	
	
	// Include declaration "CppInclude"
	String headerDecl		= "";
	if (GenUtils.hasStereotype(currentInterface, CppStereo.include)) {
		headerDecl			= "/* Include from CppInclude declaration                      */"+NL+headerDecl;
		headerDecl			= GenUtils.getTaggedValue(currentInterface, CppStereo.include, "header");
	}
	
	
	// Prepare owner package header include
	Package ownerPackage	= currentInterface.getPackage();
	String ownerInclude		= "";
	if (ownerPackage != null) {
		// Create an util template to prepare the declaration
		CppOwnerPackageIncludeDeclaration jetOwnerInclude		
							= new CppOwnerPackageIncludeDeclaration();
		// Execute the util template
		ownerInclude		= jetOwnerInclude.generate(ownerPackage);
	}
	
		
	// Prepare dependency includes
	CppInterfaceAllIncludesDeclaration jetInterfaceIncludes
									= new CppInterfaceAllIncludesDeclaration();
	String interfaceIncludes			= jetInterfaceIncludes.generate(argument);
	if (!interfaceIncludes.equals("")) {
		interfaceIncludes	= "/* Structural includes (inheritance, dependencies, ... */"+NL+interfaceIncludes;
	}
	
	
	
	// Prepare Methods declarations
	String publicOperations		= "";
	
	// Methods
	CppInterfacePublicOperationsDeclaration jetPublicInterfacePOp
								= new CppInterfacePublicOperationsDeclaration();
	publicOperations			= jetPublicInterfacePOp.generate(currentInterface);
	
		
	// Prepare inherited interfaces
	String inheritedDeclarations = "";
	CppInterfaceInheritedDeclarations jetInherited
									= new CppInterfaceInheritedDeclarations();
	inheritedDeclarations			= jetInherited.generate(currentInterface);
	
	
	
	
	
//////////////////////////////////////////////////////////////////////////////////////////
// The following part contains the template
//////////////////////////////////////////////////////////////////////////////////////////%>
#ifndef <%= interfaceFULLNAME %>_H
#define <%= interfaceFULLNAME %>_H

/************************************************************
              <%= interfaceName %> interface header
 ************************************************************/

<%= ownerInclude %>

<%= interfaceIncludes %>

<%= headerDecl %>
<%= openNS %>
/************************************************************/
<%= iDoc %>
class <%= interfaceName %> <%= inheritedDeclarations %>{

/* Public declarations                                      */
public:
<%= publicOperations %>

};

/************************************************************
              End of <%= interfaceName %> interface header
 ************************************************************/
<%= closeNS %>

#endif
