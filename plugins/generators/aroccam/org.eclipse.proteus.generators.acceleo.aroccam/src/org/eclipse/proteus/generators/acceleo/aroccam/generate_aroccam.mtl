[comment encoding = UTF-8 /]
[module generate_aroccam('http://www.eclipse.org/uml2/3.0.0/UML')]

[import org::eclipse::proteus::generators::acceleo::mmqueries::ArchitectureQueries /]
[import org::eclipse::proteus::generators::acceleo::mmqueries::DataTypeQueries /]
[import org::eclipse::proteus::generators::acceleo::mmqueries::GeneralQueries /]
[import org::eclipse::proteus::generators::acceleo::mmqueries::FSMQueries /]
[import generate_aroccam_component_cpp /]
[import generate_aroccam_component_hpp /]
[import generate_aroccam_cmakelists /]
[import generate_aroccam_awp /]
[import generate_aroccam_readme /]
[import generate_aroccam_license /]
[import generate_aroccam_application_hpp /]
[import generate_aroccam_application_cpp /]
[import generate_aroccam_datatype_headers /]
[import generate_aroccam_datatype/]
[import generate_aroccam_userdefined_datatype_hpp /]

[template public generateAroccamDiagram(model : Model)]
[comment @main/]

[if (isRootModel(model))]

	[comment]Aroccam main files generation[/comment]
	[generateAroccamCMakeLists(model) /]
	[generateAroccamAWP(model)/]
	[generateAroccamReadme(model) /]
	[generateAroccamLicense(model) /]
	[generateAroccamApplicationHpp(model) /]
	[generateAroccamApplicationCpp(model) /]
	[generateAroccamDataTypeHeaders() /]
	[generateAroccamDataType() /]
	
	[comment]Components generation[/comment]
	[for (elt: NamedElement | getProteusComponentModels(model))]
		[let c : Class = elt.oclAsType(Class)]
			[if (c.getStereotype().contains('Software'))]
				[generateAroccamComponentHpp(c,model)/]
				[generateAroccamComponentCpp(c,model)/]
			[/if]
		[/let]
	[/for]

	[comment] User defined datatypes [/comment]
	[for (elt: NamedElement | getElementsDataType(model))]
		[generateAroccamUserDefinedDataTypeHpp(elt,model)/]
	[/for]
[/if]

[/template]