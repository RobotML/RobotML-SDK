[comment encoding = UTF-8 /]
[module cppFunctionDecl('http://www.xtext.org/AthenaDSL')/]

[import org::eclipse::robotml::generators::xtext::athena::simu::main::jqueries /]

[template public cppFunctionDecl(project : Project)]
	
[file ('stubCPP.cc', false, 'UTF-8')] 

// 
// Includes ----------------------------------------------------------------------
// 

#include <iostream>
#include "Compatibility.h"
#include "PredefinedTypes.h" 
#include "TypeDefs.h"
#include "tests.h"

//
// Namespace ---------------------------------------------------------------------
//

using namespace AthenaV3;

//
// -------------------------------------------------------------------------------
//

extern "C" __IMPORT__ void declareUserFunction(const std::string&, void*);

//----------------------------------------------------------------
// User Function Declaration
//----------------------------------------------------------------

[for (stub : functionDeclaration | project.functions)]
	[if (isCPPFunction(stub))]
__EXPORT__ void [stub.name/]([getCPPFunctionSignature(stub)/]);
	[/if]	
[/for]

//----------------------------------------------------------------
// User Function To Directory
//----------------------------------------------------------------

namespace generated {

class StubCPPDLL {
public:
	StubCPPDLL() {
[for (stub : functionDeclaration | project.functions)]
	[if (isCPPFunction(stub))]
		declareUserFunction("[stub.name/]", (void*)&[stub.name/]);
	[/if]	
[/for]
	}
};

StubCPPDLL myStubCPPDLL;

}


[/file]
	
[/template]

