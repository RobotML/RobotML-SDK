/*
* generated by Xtext
*/
grammar InternalAthenaDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.AthenaDSLGrammarAccess;

}

@parser::members {
 
 	private AthenaDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AthenaDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProject
entryRuleProject 
:
{ before(grammarAccess.getProjectRule()); }
	 ruleProject
{ after(grammarAccess.getProjectRule()); } 
	 EOF 
;

// Rule Project
ruleProject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProjectAccess().getGroup()); }
(rule__Project__Group__0)
{ after(grammarAccess.getProjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLanguageDeclaration
entryRuleLanguageDeclaration 
:
{ before(grammarAccess.getLanguageDeclarationRule()); }
	 ruleLanguageDeclaration
{ after(grammarAccess.getLanguageDeclarationRule()); } 
	 EOF 
;

// Rule LanguageDeclaration
ruleLanguageDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLanguageDeclarationAccess().getGroup()); }
(rule__LanguageDeclaration__Group__0)
{ after(grammarAccess.getLanguageDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataType
entryRuleDataType 
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
(rule__DataType__Alternatives)
{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledefineType
entryRuledefineType 
:
{ before(grammarAccess.getDefineTypeRule()); }
	 ruledefineType
{ after(grammarAccess.getDefineTypeRule()); } 
	 EOF 
;

// Rule defineType
ruledefineType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefineTypeAccess().getGroup()); }
(rule__DefineType__Group__0)
{ after(grammarAccess.getDefineTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulevalidityFunctionDeclaration
entryRulevalidityFunctionDeclaration 
:
{ before(grammarAccess.getValidityFunctionDeclarationRule()); }
	 rulevalidityFunctionDeclaration
{ after(grammarAccess.getValidityFunctionDeclarationRule()); } 
	 EOF 
;

// Rule validityFunctionDeclaration
rulevalidityFunctionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidityFunctionDeclarationAccess().getGroup()); }
(rule__ValidityFunctionDeclaration__Group__0)
{ after(grammarAccess.getValidityFunctionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulebasicType
entryRulebasicType 
:
{ before(grammarAccess.getBasicTypeRule()); }
	 rulebasicType
{ after(grammarAccess.getBasicTypeRule()); } 
	 EOF 
;

// Rule basicType
rulebasicType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBasicTypeAccess().getGroup()); }
(rule__BasicType__Group__0)
{ after(grammarAccess.getBasicTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleincludeDecl
entryRuleincludeDecl 
:
{ before(grammarAccess.getIncludeDeclRule()); }
	 ruleincludeDecl
{ after(grammarAccess.getIncludeDeclRule()); } 
	 EOF 
;

// Rule includeDecl
ruleincludeDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIncludeDeclAccess().getGroup()); }
(rule__IncludeDecl__Group__0)
{ after(grammarAccess.getIncludeDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelanguageDecl
entryRulelanguageDecl 
:
{ before(grammarAccess.getLanguageDeclRule()); }
	 rulelanguageDecl
{ after(grammarAccess.getLanguageDeclRule()); } 
	 EOF 
;

// Rule languageDecl
rulelanguageDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLanguageDeclAccess().getGroup()); }
(rule__LanguageDecl__Group__0)
{ after(grammarAccess.getLanguageDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelexicalCastDecl
entryRulelexicalCastDecl 
:
{ before(grammarAccess.getLexicalCastDeclRule()); }
	 rulelexicalCastDecl
{ after(grammarAccess.getLexicalCastDeclRule()); } 
	 EOF 
;

// Rule lexicalCastDecl
rulelexicalCastDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLexicalCastDeclAccess().getGroup()); }
(rule__LexicalCastDecl__Group__0)
{ after(grammarAccess.getLexicalCastDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulearrayType
entryRulearrayType 
:
{ before(grammarAccess.getArrayTypeRule()); }
	 rulearrayType
{ after(grammarAccess.getArrayTypeRule()); } 
	 EOF 
;

// Rule arrayType
rulearrayType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayTypeAccess().getGroup()); }
(rule__ArrayType__Group__0)
{ after(grammarAccess.getArrayTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulevectorType
entryRulevectorType 
:
{ before(grammarAccess.getVectorTypeRule()); }
	 rulevectorType
{ after(grammarAccess.getVectorTypeRule()); } 
	 EOF 
;

// Rule vectorType
rulevectorType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVectorTypeAccess().getGroup()); }
(rule__VectorType__Group__0)
{ after(grammarAccess.getVectorTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemapType
entryRulemapType 
:
{ before(grammarAccess.getMapTypeRule()); }
	 rulemapType
{ after(grammarAccess.getMapTypeRule()); } 
	 EOF 
;

// Rule mapType
rulemapType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMapTypeAccess().getGroup()); }
(rule__MapType__Group__0)
{ after(grammarAccess.getMapTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestructType
entryRulestructType 
:
{ before(grammarAccess.getStructTypeRule()); }
	 rulestructType
{ after(grammarAccess.getStructTypeRule()); } 
	 EOF 
;

// Rule structType
rulestructType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructTypeAccess().getGroup()); }
(rule__StructType__Group__0)
{ after(grammarAccess.getStructTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestructElement
entryRulestructElement 
:
{ before(grammarAccess.getStructElementRule()); }
	 rulestructElement
{ after(grammarAccess.getStructElementRule()); } 
	 EOF 
;

// Rule structElement
rulestructElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructElementAccess().getGroup()); }
(rule__StructElement__Group__0)
{ after(grammarAccess.getStructElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleindex
entryRuleindex 
:
{ before(grammarAccess.getIndexRule()); }
	 ruleindex
{ after(grammarAccess.getIndexRule()); } 
	 EOF 
;

// Rule index
ruleindex
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndexAccess().getGroup()); }
(rule__Index__Group__0)
{ after(grammarAccess.getIndexAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleunionType
entryRuleunionType 
:
{ before(grammarAccess.getUnionTypeRule()); }
	 ruleunionType
{ after(grammarAccess.getUnionTypeRule()); } 
	 EOF 
;

// Rule unionType
ruleunionType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnionTypeAccess().getGroup()); }
(rule__UnionType__Group__0)
{ after(grammarAccess.getUnionTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRulefunctionDeclaration
entryRulefunctionDeclaration 
:
{ before(grammarAccess.getFunctionDeclarationRule()); }
	 rulefunctionDeclaration
{ after(grammarAccess.getFunctionDeclarationRule()); } 
	 EOF 
;

// Rule functionDeclaration
rulefunctionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
(rule__FunctionDeclaration__Group__0)
{ after(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleargumentsDeclaration
entryRuleargumentsDeclaration 
:
{ before(grammarAccess.getArgumentsDeclarationRule()); }
	 ruleargumentsDeclaration
{ after(grammarAccess.getArgumentsDeclarationRule()); } 
	 EOF 
;

// Rule argumentsDeclaration
ruleargumentsDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentsDeclarationAccess().getGroup()); }
(rule__ArgumentsDeclaration__Group__0)
{ after(grammarAccess.getArgumentsDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulearg
entryRulearg 
:
{ before(grammarAccess.getArgRule()); }
	 rulearg
{ after(grammarAccess.getArgRule()); } 
	 EOF 
;

// Rule arg
rulearg
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgAccess().getGroup()); }
(rule__Arg__Group__0)
{ after(grammarAccess.getArgAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcessingDeclaration
entryRuleProcessingDeclaration 
:
{ before(grammarAccess.getProcessingDeclarationRule()); }
	 ruleProcessingDeclaration
{ after(grammarAccess.getProcessingDeclarationRule()); } 
	 EOF 
;

// Rule ProcessingDeclaration
ruleProcessingDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcessingDeclarationAccess().getGroup()); }
(rule__ProcessingDeclaration__Group__0)
{ after(grammarAccess.getProcessingDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestatement
entryRulestatement 
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getCallAssignment()); }
(rule__Statement__CallAssignment)
{ after(grammarAccess.getStatementAccess().getCallAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelocalParameterDeclaration
entryRulelocalParameterDeclaration 
:
{ before(grammarAccess.getLocalParameterDeclarationRule()); }
	 rulelocalParameterDeclaration
{ after(grammarAccess.getLocalParameterDeclarationRule()); } 
	 EOF 
;

// Rule localParameterDeclaration
rulelocalParameterDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalParameterDeclarationAccess().getGroup()); }
(rule__LocalParameterDeclaration__Group__0)
{ after(grammarAccess.getLocalParameterDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelocalEventDeclaration
entryRulelocalEventDeclaration 
:
{ before(grammarAccess.getLocalEventDeclarationRule()); }
	 rulelocalEventDeclaration
{ after(grammarAccess.getLocalEventDeclarationRule()); } 
	 EOF 
;

// Rule localEventDeclaration
rulelocalEventDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalEventDeclarationAccess().getEventDeclarationParserRuleCall()); }
	ruleeventDeclaration
{ after(grammarAccess.getLocalEventDeclarationAccess().getEventDeclarationParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleifblock
entryRuleifblock 
:
{ before(grammarAccess.getIfblockRule()); }
	 ruleifblock
{ after(grammarAccess.getIfblockRule()); } 
	 EOF 
;

// Rule ifblock
ruleifblock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfblockAccess().getGroup()); }
(rule__Ifblock__Group__0)
{ after(grammarAccess.getIfblockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulewhileblock
entryRulewhileblock 
:
{ before(grammarAccess.getWhileblockRule()); }
	 rulewhileblock
{ after(grammarAccess.getWhileblockRule()); } 
	 EOF 
;

// Rule whileblock
rulewhileblock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileblockAccess().getGroup()); }
(rule__Whileblock__Group__0)
{ after(grammarAccess.getWhileblockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefunctionCall
entryRulefunctionCall 
:
{ before(grammarAccess.getFunctionCallRule()); }
	 rulefunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule functionCall
rulefunctionCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
(rule__FunctionCall__Group__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleprototypeDeclaration
entryRuleprototypeDeclaration 
:
{ before(grammarAccess.getPrototypeDeclarationRule()); }
	 ruleprototypeDeclaration
{ after(grammarAccess.getPrototypeDeclarationRule()); } 
	 EOF 
;

// Rule prototypeDeclaration
ruleprototypeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrototypeDeclarationAccess().getGroup()); }
(rule__PrototypeDeclaration__Group__0)
{ after(grammarAccess.getPrototypeDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulearchitectureElement
entryRulearchitectureElement 
:
{ before(grammarAccess.getArchitectureElementRule()); }
	 rulearchitectureElement
{ after(grammarAccess.getArchitectureElementRule()); } 
	 EOF 
;

// Rule architectureElement
rulearchitectureElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArchitectureElementAccess().getAlternatives()); }
(rule__ArchitectureElement__Alternatives)
{ after(grammarAccess.getArchitectureElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesignalDeclaration
entryRulesignalDeclaration 
:
{ before(grammarAccess.getSignalDeclarationRule()); }
	 rulesignalDeclaration
{ after(grammarAccess.getSignalDeclarationRule()); } 
	 EOF 
;

// Rule signalDeclaration
rulesignalDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalDeclarationAccess().getGroup()); }
(rule__SignalDeclaration__Group__0)
{ after(grammarAccess.getSignalDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleeventDeclaration
entryRuleeventDeclaration 
:
{ before(grammarAccess.getEventDeclarationRule()); }
	 ruleeventDeclaration
{ after(grammarAccess.getEventDeclarationRule()); } 
	 EOF 
;

// Rule eventDeclaration
ruleeventDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventDeclarationAccess().getGroup()); }
(rule__EventDeclaration__Group__0)
{ after(grammarAccess.getEventDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleeventCondition
entryRuleeventCondition 
:
{ before(grammarAccess.getEventConditionRule()); }
	 ruleeventCondition
{ after(grammarAccess.getEventConditionRule()); } 
	 EOF 
;

// Rule eventCondition
ruleeventCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventConditionAccess().getGroup()); }
(rule__EventCondition__Group__0)
{ after(grammarAccess.getEventConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleparameterDeclaration
entryRuleparameterDeclaration 
:
{ before(grammarAccess.getParameterDeclarationRule()); }
	 ruleparameterDeclaration
{ after(grammarAccess.getParameterDeclarationRule()); } 
	 EOF 
;

// Rule parameterDeclaration
ruleparameterDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterDeclarationAccess().getGroup()); }
(rule__ParameterDeclaration__Group__0)
{ after(grammarAccess.getParameterDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestatesetDeclaration
entryRulestatesetDeclaration 
:
{ before(grammarAccess.getStatesetDeclarationRule()); }
	 rulestatesetDeclaration
{ after(grammarAccess.getStatesetDeclarationRule()); } 
	 EOF 
;

// Rule statesetDeclaration
rulestatesetDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getGroup()); }
(rule__StatesetDeclaration__Group__0)
{ after(grammarAccess.getStatesetDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestateDeclaration
entryRulestateDeclaration 
:
{ before(grammarAccess.getStateDeclarationRule()); }
	 rulestateDeclaration
{ after(grammarAccess.getStateDeclarationRule()); } 
	 EOF 
;

// Rule stateDeclaration
rulestateDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateDeclarationAccess().getNameAssignment()); }
(rule__StateDeclaration__NameAssignment)
{ after(grammarAccess.getStateDeclarationAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletransitionDeclaration
entryRuletransitionDeclaration 
:
{ before(grammarAccess.getTransitionDeclarationRule()); }
	 ruletransitionDeclaration
{ after(grammarAccess.getTransitionDeclarationRule()); } 
	 EOF 
;

// Rule transitionDeclaration
ruletransitionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getGroup()); }
(rule__TransitionDeclaration__Group__0)
{ after(grammarAccess.getTransitionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleinstanceDeclaration
entryRuleinstanceDeclaration 
:
{ before(grammarAccess.getInstanceDeclarationRule()); }
	 ruleinstanceDeclaration
{ after(grammarAccess.getInstanceDeclarationRule()); } 
	 EOF 
;

// Rule instanceDeclaration
ruleinstanceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getGroup()); }
(rule__InstanceDeclaration__Group__0)
{ after(grammarAccess.getInstanceDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleinteractionDeclaration
entryRuleinteractionDeclaration 
:
{ before(grammarAccess.getInteractionDeclarationRule()); }
	 ruleinteractionDeclaration
{ after(grammarAccess.getInteractionDeclarationRule()); } 
	 EOF 
;

// Rule interactionDeclaration
ruleinteractionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getGroup()); }
(rule__InteractionDeclaration__Group__0)
{ after(grammarAccess.getInteractionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleinteractionCall
entryRuleinteractionCall 
:
{ before(grammarAccess.getInteractionCallRule()); }
	 ruleinteractionCall
{ after(grammarAccess.getInteractionCallRule()); } 
	 EOF 
;

// Rule interactionCall
ruleinteractionCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractionCallAccess().getGroup()); }
(rule__InteractionCall__Group__0)
{ after(grammarAccess.getInteractionCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefarg
entryRulefarg 
:
{ before(grammarAccess.getFargRule()); }
	 rulefarg
{ after(grammarAccess.getFargRule()); } 
	 EOF 
;

// Rule farg
rulefarg
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFargAccess().getVarNameAssignment()); }
(rule__Farg__VarNameAssignment)
{ after(grammarAccess.getFargAccess().getVarNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulereferenceDeclaration
entryRulereferenceDeclaration 
:
{ before(grammarAccess.getReferenceDeclarationRule()); }
	 rulereferenceDeclaration
{ after(grammarAccess.getReferenceDeclarationRule()); } 
	 EOF 
;

// Rule referenceDeclaration
rulereferenceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getGroup()); }
(rule__ReferenceDeclaration__Group__0)
{ after(grammarAccess.getReferenceDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulequalifiedName
entryRulequalifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 rulequalifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule qualifiedName
rulequalifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulewrapperDeclaration
entryRulewrapperDeclaration 
:
{ before(grammarAccess.getWrapperDeclarationRule()); }
	 rulewrapperDeclaration
{ after(grammarAccess.getWrapperDeclarationRule()); } 
	 EOF 
;

// Rule wrapperDeclaration
rulewrapperDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getGroup()); }
(rule__WrapperDeclaration__Group__0)
{ after(grammarAccess.getWrapperDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulebeginAcc
entryRulebeginAcc 
:
{ before(grammarAccess.getBeginAccRule()); }
	 rulebeginAcc
{ after(grammarAccess.getBeginAccRule()); } 
	 EOF 
;

// Rule beginAcc
rulebeginAcc
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBeginAccAccess().getLeftCurlyBracketKeyword()); }

	'{' 

{ after(grammarAccess.getBeginAccAccess().getLeftCurlyBracketKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleendAcc
entryRuleendAcc 
:
{ before(grammarAccess.getEndAccRule()); }
	 ruleendAcc
{ after(grammarAccess.getEndAccRule()); } 
	 EOF 
;

// Rule endAcc
ruleendAcc
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEndAccAccess().getRightCurlyBracketKeyword()); }

	'}' 

{ after(grammarAccess.getEndAccAccess().getRightCurlyBracketKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulebegin
entryRulebegin 
:
{ before(grammarAccess.getBeginRule()); }
	 rulebegin
{ after(grammarAccess.getBeginRule()); } 
	 EOF 
;

// Rule begin
rulebegin
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBeginAccess().getBeginKeyword()); }

	'begin' 

{ after(grammarAccess.getBeginAccess().getBeginKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleend
entryRuleend 
:
{ before(grammarAccess.getEndRule()); }
	 ruleend
{ after(grammarAccess.getEndRule()); } 
	 EOF 
;

// Rule end
ruleend
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEndAccess().getEndKeyword()); }

	'end' 

{ after(grammarAccess.getEndAccess().getEndKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleopenPar
entryRuleopenPar 
:
{ before(grammarAccess.getOpenParRule()); }
	 ruleopenPar
{ after(grammarAccess.getOpenParRule()); } 
	 EOF 
;

// Rule openPar
ruleopenPar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpenParAccess().getLeftParenthesisKeyword()); }

	'(' 

{ after(grammarAccess.getOpenParAccess().getLeftParenthesisKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleclosePar
entryRuleclosePar 
:
{ before(grammarAccess.getCloseParRule()); }
	 ruleclosePar
{ after(grammarAccess.getCloseParRule()); } 
	 EOF 
;

// Rule closePar
ruleclosePar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCloseParAccess().getRightParenthesisKeyword()); }

	')' 

{ after(grammarAccess.getCloseParAccess().getRightParenthesisKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleat
entryRuleat 
:
{ before(grammarAccess.getAtRule()); }
	 ruleat
{ after(grammarAccess.getAtRule()); } 
	 EOF 
;

// Rule at
ruleat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtAccess().getCommercialAtKeyword()); }

	'@' 

{ after(grammarAccess.getAtAccess().getCommercialAtKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledot
entryRuledot 
:
{ before(grammarAccess.getDotRule()); }
	 ruledot
{ after(grammarAccess.getDotRule()); } 
	 EOF 
;

// Rule dot
ruledot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDotAccess().getFullStopKeyword()); }

	'.' 

{ after(grammarAccess.getDotAccess().getFullStopKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecoma
entryRulecoma 
:
{ before(grammarAccess.getComaRule()); }
	 rulecoma
{ after(grammarAccess.getComaRule()); } 
	 EOF 
;

// Rule coma
rulecoma
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComaAccess().getCommaKeyword()); }

	',' 

{ after(grammarAccess.getComaAccess().getCommaKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__DataType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getBasicTypeParserRuleCall_0()); }
	rulebasicType
{ after(grammarAccess.getDataTypeAccess().getBasicTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getDefineTypeParserRuleCall_1()); }
	ruledefineType
{ after(grammarAccess.getDataTypeAccess().getDefineTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getArrayTypeParserRuleCall_2()); }
	rulearrayType
{ after(grammarAccess.getDataTypeAccess().getArrayTypeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getVectorTypeParserRuleCall_3()); }
	rulevectorType
{ after(grammarAccess.getDataTypeAccess().getVectorTypeParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getMapTypeParserRuleCall_4()); }
	rulemapType
{ after(grammarAccess.getDataTypeAccess().getMapTypeParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getStructTypeParserRuleCall_5()); }
	rulestructType
{ after(grammarAccess.getDataTypeAccess().getStructTypeParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getUnionTypeParserRuleCall_6()); }
	ruleunionType
{ after(grammarAccess.getDataTypeAccess().getUnionTypeParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arg__ModifierAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getModifierInoutKeyword_0_0_0()); }

	'inout' 

{ after(grammarAccess.getArgAccess().getModifierInoutKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getArgAccess().getModifierInKeyword_0_0_1()); }

	'in' 

{ after(grammarAccess.getArgAccess().getModifierInKeyword_0_0_1()); }
)

    |(
{ before(grammarAccess.getArgAccess().getModifierOutKeyword_0_0_2()); }

	'out' 

{ after(grammarAccess.getArgAccess().getModifierOutKeyword_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__CallAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getCallFunctionCallParserRuleCall_0_0()); }
	rulefunctionCall
{ after(grammarAccess.getStatementAccess().getCallFunctionCallParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getCallWhileblockParserRuleCall_0_1()); }
	rulewhileblock
{ after(grammarAccess.getStatementAccess().getCallWhileblockParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getCallIfblockParserRuleCall_0_2()); }
	ruleifblock
{ after(grammarAccess.getStatementAccess().getCallIfblockParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureElementAccess().getParameterDeclarationParserRuleCall_0()); }
	ruleparameterDeclaration
{ after(grammarAccess.getArchitectureElementAccess().getParameterDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getArchitectureElementAccess().getReferenceDeclarationParserRuleCall_1()); }
	rulereferenceDeclaration
{ after(grammarAccess.getArchitectureElementAccess().getReferenceDeclarationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getArchitectureElementAccess().getEventDeclarationParserRuleCall_2()); }
	ruleeventDeclaration
{ after(grammarAccess.getArchitectureElementAccess().getEventDeclarationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getArchitectureElementAccess().getStatesetDeclarationParserRuleCall_3()); }
	rulestatesetDeclaration
{ after(grammarAccess.getArchitectureElementAccess().getStatesetDeclarationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getArchitectureElementAccess().getInstanceDeclarationParserRuleCall_4()); }
	ruleinstanceDeclaration
{ after(grammarAccess.getArchitectureElementAccess().getInstanceDeclarationParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getArchitectureElementAccess().getInteractionDeclarationParserRuleCall_5()); }
	ruleinteractionDeclaration
{ after(grammarAccess.getArchitectureElementAccess().getInteractionDeclarationParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getArchitectureElementAccess().getSignalDeclarationParserRuleCall_6()); }
	rulesignalDeclaration
{ after(grammarAccess.getArchitectureElementAccess().getSignalDeclarationParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventCondition__CondAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventConditionAccess().getCondEqualsSignEqualsSignKeyword_1_0_0()); }

	'==' 

{ after(grammarAccess.getEventConditionAccess().getCondEqualsSignEqualsSignKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getEventConditionAccess().getCondGreaterThanSignEqualsSignKeyword_1_0_1()); }

	'>=' 

{ after(grammarAccess.getEventConditionAccess().getCondGreaterThanSignEqualsSignKeyword_1_0_1()); }
)

    |(
{ before(grammarAccess.getEventConditionAccess().getCondLessThanSignEqualsSignKeyword_1_0_2()); }

	'<=' 

{ after(grammarAccess.getEventConditionAccess().getCondLessThanSignEqualsSignKeyword_1_0_2()); }
)

    |(
{ before(grammarAccess.getEventConditionAccess().getCondLessThanSignKeyword_1_0_3()); }

	'<' 

{ after(grammarAccess.getEventConditionAccess().getCondLessThanSignKeyword_1_0_3()); }
)

    |(
{ before(grammarAccess.getEventConditionAccess().getCondGreaterThanSignKeyword_1_0_4()); }

	'>' 

{ after(grammarAccess.getEventConditionAccess().getCondGreaterThanSignKeyword_1_0_4()); }
)

    |(
{ before(grammarAccess.getEventConditionAccess().getCondPercentSignPercentSignKeyword_1_0_5()); }

	'%%' 

{ after(grammarAccess.getEventConditionAccess().getCondPercentSignPercentSignKeyword_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventCondition__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventConditionAccess().getRightPartIAssignment_2_0()); }
(rule__EventCondition__RightPartIAssignment_2_0)
{ after(grammarAccess.getEventConditionAccess().getRightPartIAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getEventConditionAccess().getRightPartNAssignment_2_1()); }
(rule__EventCondition__RightPartNAssignment_2_1)
{ after(grammarAccess.getEventConditionAccess().getRightPartNAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getEventConditionAccess().getRightPartSAssignment_2_2()); }
(rule__EventCondition__RightPartSAssignment_2_2)
{ after(grammarAccess.getEventConditionAccess().getRightPartSAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getGroup_5_0()); }
(rule__ParameterDeclaration__Group_5_0__0)
{ after(grammarAccess.getParameterDeclarationAccess().getGroup_5_0()); }
)

    |(
{ before(grammarAccess.getParameterDeclarationAccess().getGroup_5_1()); }
(rule__ParameterDeclaration__Group_5_1__0)
{ after(grammarAccess.getParameterDeclarationAccess().getGroup_5_1()); }
)

    |(
{ before(grammarAccess.getParameterDeclarationAccess().getGroup_5_2()); }
(rule__ParameterDeclaration__Group_5_2__0)
{ after(grammarAccess.getParameterDeclarationAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Project__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Project__Group__0__Impl
	rule__Project__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getImportsAssignment_0()); }
(rule__Project__ImportsAssignment_0)*
{ after(grammarAccess.getProjectAccess().getImportsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Project__Group__1__Impl
	rule__Project__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getLanguagesAssignment_1()); }
(rule__Project__LanguagesAssignment_1)*
{ after(grammarAccess.getProjectAccess().getLanguagesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Project__Group__2__Impl
	rule__Project__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getTypesAssignment_2()); }
(rule__Project__TypesAssignment_2)*
{ after(grammarAccess.getProjectAccess().getTypesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Project__Group__3__Impl
	rule__Project__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getValiditiesAssignment_3()); }
(rule__Project__ValiditiesAssignment_3)*
{ after(grammarAccess.getProjectAccess().getValiditiesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Project__Group__4__Impl
	rule__Project__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getImportsAssignment_4()); }
(rule__Project__ImportsAssignment_4)*
{ after(grammarAccess.getProjectAccess().getImportsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Project__Group__5__Impl
	rule__Project__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getFunctionsAssignment_5()); }
(rule__Project__FunctionsAssignment_5)*
{ after(grammarAccess.getProjectAccess().getFunctionsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Project__Group__6__Impl
	rule__Project__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getImportsAssignment_6()); }
(rule__Project__ImportsAssignment_6)*
{ after(grammarAccess.getProjectAccess().getImportsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Project__Group__7__Impl
	rule__Project__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getProcessingsAssignment_7()); }
(rule__Project__ProcessingsAssignment_7)*
{ after(grammarAccess.getProjectAccess().getProcessingsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Project__Group__8__Impl
	rule__Project__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getImportsAssignment_8()); }
(rule__Project__ImportsAssignment_8)*
{ after(grammarAccess.getProjectAccess().getImportsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Project__Group__9__Impl
	rule__Project__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getPrototypesAssignment_9()); }
(rule__Project__PrototypesAssignment_9)*
{ after(grammarAccess.getProjectAccess().getPrototypesAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Project__Group__10__Impl
	rule__Project__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getImportsAssignment_10()); }
(rule__Project__ImportsAssignment_10)*
{ after(grammarAccess.getProjectAccess().getImportsAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Project__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getWrappersAssignment_11()); }
(rule__Project__WrappersAssignment_11)*
{ after(grammarAccess.getProjectAccess().getWrappersAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LanguageDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageDeclaration__Group__0__Impl
	rule__LanguageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageDeclarationAccess().getLanguageKeyword_0()); }

	'language' 

{ after(grammarAccess.getLanguageDeclarationAccess().getLanguageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageDeclarationAccess().getNameAssignment_1()); }
(rule__LanguageDeclaration__NameAssignment_1)
{ after(grammarAccess.getLanguageDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefineType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineType__Group__0__Impl
	rule__DefineType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineTypeAccess().getDefineKeyword_0()); }

	'define' 

{ after(grammarAccess.getDefineTypeAccess().getDefineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineType__Group__1__Impl
	rule__DefineType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineTypeAccess().getNameAssignment_1()); }
(rule__DefineType__NameAssignment_1)
{ after(grammarAccess.getDefineTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineType__Group__2__Impl
	rule__DefineType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineTypeAccess().getIsKeyword_2()); }

	'is' 

{ after(grammarAccess.getDefineTypeAccess().getIsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineTypeAccess().getTypenameAssignment_3()); }
(rule__DefineType__TypenameAssignment_3)
{ after(grammarAccess.getDefineTypeAccess().getTypenameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ValidityFunctionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValidityFunctionDeclaration__Group__0__Impl
	rule__ValidityFunctionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidityFunctionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidityFunctionDeclarationAccess().getValidityKeyword_0()); }

	'validity' 

{ after(grammarAccess.getValidityFunctionDeclarationAccess().getValidityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValidityFunctionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValidityFunctionDeclaration__Group__1__Impl
	rule__ValidityFunctionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidityFunctionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidityFunctionDeclarationAccess().getTypenameAssignment_1()); }
(rule__ValidityFunctionDeclaration__TypenameAssignment_1)
{ after(grammarAccess.getValidityFunctionDeclarationAccess().getTypenameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValidityFunctionDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValidityFunctionDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidityFunctionDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidityFunctionDeclarationAccess().getFctNameAssignment_2()); }
(rule__ValidityFunctionDeclaration__FctNameAssignment_2)
{ after(grammarAccess.getValidityFunctionDeclarationAccess().getFctNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BasicType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicType__Group__0__Impl
	rule__BasicType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicTypeAccess().getBasicKeyword_0()); }

	'basic' 

{ after(grammarAccess.getBasicTypeAccess().getBasicKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicType__Group__1__Impl
	rule__BasicType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicTypeAccess().getNameAssignment_1()); }
(rule__BasicType__NameAssignment_1)
{ after(grammarAccess.getBasicTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicType__Group__2__Impl
	rule__BasicType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicTypeAccess().getBeginParserRuleCall_2()); }
	rulebegin
{ after(grammarAccess.getBasicTypeAccess().getBeginParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicType__Group__3__Impl
	rule__BasicType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicTypeAccess().getIncludesAssignment_3()); }
(rule__BasicType__IncludesAssignment_3)*
{ after(grammarAccess.getBasicTypeAccess().getIncludesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicType__Group__4__Impl
	rule__BasicType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getBasicTypeAccess().getLanguagesAssignment_4()); }
(rule__BasicType__LanguagesAssignment_4)
{ after(grammarAccess.getBasicTypeAccess().getLanguagesAssignment_4()); }
)
(
{ before(grammarAccess.getBasicTypeAccess().getLanguagesAssignment_4()); }
(rule__BasicType__LanguagesAssignment_4)*
{ after(grammarAccess.getBasicTypeAccess().getLanguagesAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicType__Group__5__Impl
	rule__BasicType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicTypeAccess().getCastsAssignment_5()); }
(rule__BasicType__CastsAssignment_5)*
{ after(grammarAccess.getBasicTypeAccess().getCastsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicType__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicTypeAccess().getEndParserRuleCall_6()); }
	ruleend
{ after(grammarAccess.getBasicTypeAccess().getEndParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__IncludeDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeDecl__Group__0__Impl
	rule__IncludeDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeDeclAccess().getIncludeKeyword_0()); }

	'include' 

{ after(grammarAccess.getIncludeDeclAccess().getIncludeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeDecl__Group__1__Impl
	rule__IncludeDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeDeclAccess().getLangAssignment_1()); }
(rule__IncludeDecl__LangAssignment_1)
{ after(grammarAccess.getIncludeDeclAccess().getLangAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeDecl__Group__2__Impl
	rule__IncludeDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeDeclAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getIncludeDeclAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeDeclAccess().getIncludeNameAssignment_3()); }
(rule__IncludeDecl__IncludeNameAssignment_3)
{ after(grammarAccess.getIncludeDeclAccess().getIncludeNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LanguageDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageDecl__Group__0__Impl
	rule__LanguageDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageDeclAccess().getLanguageKeyword_0()); }

	'language' 

{ after(grammarAccess.getLanguageDeclAccess().getLanguageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageDecl__Group__1__Impl
	rule__LanguageDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageDeclAccess().getLangAssignment_1()); }
(rule__LanguageDecl__LangAssignment_1)
{ after(grammarAccess.getLanguageDeclAccess().getLangAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageDecl__Group__2__Impl
	rule__LanguageDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageDeclAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getLanguageDeclAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageDecl__Group__3__Impl
	rule__LanguageDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageDeclAccess().getTransAssignment_3()); }
(rule__LanguageDecl__TransAssignment_3)
{ after(grammarAccess.getLanguageDeclAccess().getTransAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageDecl__Group__4__Impl
	rule__LanguageDecl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDecl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageDeclAccess().getEqualsSignKeyword_4()); }

	'=' 

{ after(grammarAccess.getLanguageDeclAccess().getEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageDecl__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageDecl__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDecl__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageDeclAccess().getValueAssignment_5()); }
(rule__LanguageDecl__ValueAssignment_5)
{ after(grammarAccess.getLanguageDeclAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__LexicalCastDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LexicalCastDecl__Group__0__Impl
	rule__LexicalCastDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LexicalCastDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLexicalCastDeclAccess().getLexicalCastKeyword_0()); }

	'lexicalCast' 

{ after(grammarAccess.getLexicalCastDeclAccess().getLexicalCastKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LexicalCastDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LexicalCastDecl__Group__1__Impl
	rule__LexicalCastDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LexicalCastDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLexicalCastDeclAccess().getLangAssignment_1()); }
(rule__LexicalCastDecl__LangAssignment_1)
{ after(grammarAccess.getLexicalCastDeclAccess().getLangAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LexicalCastDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LexicalCastDecl__Group__2__Impl
	rule__LexicalCastDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LexicalCastDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLexicalCastDeclAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getLexicalCastDeclAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LexicalCastDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LexicalCastDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LexicalCastDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLexicalCastDeclAccess().getCastAssignment_3()); }
(rule__LexicalCastDecl__CastAssignment_3)
{ after(grammarAccess.getLexicalCastDeclAccess().getCastAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ArrayType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayType__Group__0__Impl
	rule__ArrayType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeAccess().getArrayKeyword_0()); }

	'array' 

{ after(grammarAccess.getArrayTypeAccess().getArrayKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayType__Group__1__Impl
	rule__ArrayType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getArrayTypeAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayType__Group__2__Impl
	rule__ArrayType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeAccess().getTypenameAssignment_2()); }
(rule__ArrayType__TypenameAssignment_2)
{ after(grammarAccess.getArrayTypeAccess().getTypenameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayType__Group__3__Impl
	rule__ArrayType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getArrayTypeAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayType__Group__4__Impl
	rule__ArrayType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeAccess().getNameAssignment_4()); }
(rule__ArrayType__NameAssignment_4)
{ after(grammarAccess.getArrayTypeAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayType__Group__5__Impl
	rule__ArrayType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_5()); }

	'[' 

{ after(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayType__Group__6__Impl
	rule__ArrayType__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeAccess().getIndicesAssignment_6()); }
(rule__ArrayType__IndicesAssignment_6)
{ after(grammarAccess.getArrayTypeAccess().getIndicesAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayType__Group__7__Impl
	rule__ArrayType__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeAccess().getGroup_7()); }
(rule__ArrayType__Group_7__0)*
{ after(grammarAccess.getArrayTypeAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayType__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_8()); }

	']' 

{ after(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ArrayType__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayType__Group_7__0__Impl
	rule__ArrayType__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeAccess().getComaParserRuleCall_7_0()); }
	rulecoma
{ after(grammarAccess.getArrayTypeAccess().getComaParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayType__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeAccess().getIndicesAssignment_7_1()); }
(rule__ArrayType__IndicesAssignment_7_1)
{ after(grammarAccess.getArrayTypeAccess().getIndicesAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VectorType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VectorType__Group__0__Impl
	rule__VectorType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorTypeAccess().getVectorKeyword_0()); }

	'vector' 

{ after(grammarAccess.getVectorTypeAccess().getVectorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VectorType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VectorType__Group__1__Impl
	rule__VectorType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorTypeAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getVectorTypeAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VectorType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VectorType__Group__2__Impl
	rule__VectorType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorTypeAccess().getTypenameAssignment_2()); }
(rule__VectorType__TypenameAssignment_2)
{ after(grammarAccess.getVectorTypeAccess().getTypenameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VectorType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VectorType__Group__3__Impl
	rule__VectorType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorTypeAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getVectorTypeAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VectorType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VectorType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VectorType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorTypeAccess().getNameAssignment_4()); }
(rule__VectorType__NameAssignment_4)
{ after(grammarAccess.getVectorTypeAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MapType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapType__Group__0__Impl
	rule__MapType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getMapKeyword_0()); }

	'map' 

{ after(grammarAccess.getMapTypeAccess().getMapKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapType__Group__1__Impl
	rule__MapType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getMapTypeAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapType__Group__2__Impl
	rule__MapType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getKeytypeAssignment_2()); }
(rule__MapType__KeytypeAssignment_2)
{ after(grammarAccess.getMapTypeAccess().getKeytypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapType__Group__3__Impl
	rule__MapType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getComaParserRuleCall_3()); }
	rulecoma
{ after(grammarAccess.getMapTypeAccess().getComaParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapType__Group__4__Impl
	rule__MapType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getValtypeAssignment_4()); }
(rule__MapType__ValtypeAssignment_4)
{ after(grammarAccess.getMapTypeAccess().getValtypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapType__Group__5__Impl
	rule__MapType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getGreaterThanSignKeyword_5()); }

	'>' 

{ after(grammarAccess.getMapTypeAccess().getGreaterThanSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapType__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getNameAssignment_6()); }
(rule__MapType__NameAssignment_6)
{ after(grammarAccess.getMapTypeAccess().getNameAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__StructType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group__0__Impl
	rule__StructType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getStructKeyword_0()); }

	'struct' 

{ after(grammarAccess.getStructTypeAccess().getStructKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group__1__Impl
	rule__StructType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getNameAssignment_1()); }
(rule__StructType__NameAssignment_1)
{ after(grammarAccess.getStructTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group__2__Impl
	rule__StructType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getGroup_2()); }
(rule__StructType__Group_2__0)?
{ after(grammarAccess.getStructTypeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group__3__Impl
	rule__StructType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getBeginParserRuleCall_3()); }
	rulebegin
{ after(grammarAccess.getStructTypeAccess().getBeginParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group__4__Impl
	rule__StructType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStructTypeAccess().getParametersAssignment_4()); }
(rule__StructType__ParametersAssignment_4)
{ after(grammarAccess.getStructTypeAccess().getParametersAssignment_4()); }
)
(
{ before(grammarAccess.getStructTypeAccess().getParametersAssignment_4()); }
(rule__StructType__ParametersAssignment_4)*
{ after(grammarAccess.getStructTypeAccess().getParametersAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getEndParserRuleCall_5()); }
	ruleend
{ after(grammarAccess.getStructTypeAccess().getEndParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StructType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_2__0__Impl
	rule__StructType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getLessThanSignKeyword_2_0()); }

	'<' 

{ after(grammarAccess.getStructTypeAccess().getLessThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_2__1__Impl
	rule__StructType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getIndicesAssignment_2_1()); }
(rule__StructType__IndicesAssignment_2_1)
{ after(grammarAccess.getStructTypeAccess().getIndicesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_2__2__Impl
	rule__StructType__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getGroup_2_2()); }
(rule__StructType__Group_2_2__0)*
{ after(grammarAccess.getStructTypeAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getGreaterThanSignKeyword_2_3()); }

	'>' 

{ after(grammarAccess.getStructTypeAccess().getGreaterThanSignKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StructType__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_2_2__0__Impl
	rule__StructType__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getComaParserRuleCall_2_2_0()); }
	rulecoma
{ after(grammarAccess.getStructTypeAccess().getComaParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getIndicesAssignment_2_2_1()); }
(rule__StructType__IndicesAssignment_2_2_1)
{ after(grammarAccess.getStructTypeAccess().getIndicesAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructElement__Group__0__Impl
	rule__StructElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructElementAccess().getTypenameAssignment_0()); }
(rule__StructElement__TypenameAssignment_0)
{ after(grammarAccess.getStructElementAccess().getTypenameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructElement__Group__1__Impl
	rule__StructElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructElementAccess().getGroup_1()); }
(rule__StructElement__Group_1__0)?
{ after(grammarAccess.getStructElementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructElement__Group__2__Impl
	rule__StructElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructElementAccess().getNameAssignment_2()); }
(rule__StructElement__NameAssignment_2)
{ after(grammarAccess.getStructElementAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructElement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructElement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructElement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructElementAccess().getGroup_3()); }
(rule__StructElement__Group_3__0)?
{ after(grammarAccess.getStructElementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StructElement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructElement__Group_1__0__Impl
	rule__StructElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructElement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructElementAccess().getLessThanSignKeyword_1_0()); }

	'<' 

{ after(grammarAccess.getStructElementAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructElement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructElement__Group_1__1__Impl
	rule__StructElement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructElement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructElementAccess().getIndicesAssignment_1_1()); }
(rule__StructElement__IndicesAssignment_1_1)
{ after(grammarAccess.getStructElementAccess().getIndicesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructElement__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructElement__Group_1__2__Impl
	rule__StructElement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructElement__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructElementAccess().getGroup_1_2()); }
(rule__StructElement__Group_1_2__0)*
{ after(grammarAccess.getStructElementAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructElement__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructElement__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructElement__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructElementAccess().getGreaterThanSignKeyword_1_3()); }

	'>' 

{ after(grammarAccess.getStructElementAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StructElement__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructElement__Group_1_2__0__Impl
	rule__StructElement__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructElement__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructElementAccess().getComaParserRuleCall_1_2_0()); }
	rulecoma
{ after(grammarAccess.getStructElementAccess().getComaParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructElement__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructElement__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructElement__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructElementAccess().getIndicesAssignment_1_2_1()); }
(rule__StructElement__IndicesAssignment_1_2_1)
{ after(grammarAccess.getStructElementAccess().getIndicesAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructElement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructElement__Group_3__0__Impl
	rule__StructElement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructElement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructElementAccess().getHasInitValueAssignment_3_0()); }
(rule__StructElement__HasInitValueAssignment_3_0)
{ after(grammarAccess.getStructElementAccess().getHasInitValueAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructElement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructElement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructElement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructElementAccess().getInitValueAssignment_3_1()); }
(rule__StructElement__InitValueAssignment_3_1)
{ after(grammarAccess.getStructElementAccess().getInitValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Index__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Index__Group__0__Impl
	rule__Index__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getDimAssignment_0()); }
(rule__Index__DimAssignment_0)
{ after(grammarAccess.getIndexAccess().getDimAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Index__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Index__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getGroup_1()); }
(rule__Index__Group_1__0)?
{ after(grammarAccess.getIndexAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Index__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Index__Group_1__0__Impl
	rule__Index__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getHasValueAssignment_1_0()); }
(rule__Index__HasValueAssignment_1_0)
{ after(grammarAccess.getIndexAccess().getHasValueAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Index__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Index__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getValueAssignment_1_1()); }
(rule__Index__ValueAssignment_1_1)
{ after(grammarAccess.getIndexAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnionType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionType__Group__0__Impl
	rule__UnionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeAccess().getUnionKeyword_0()); }

	'union' 

{ after(grammarAccess.getUnionTypeAccess().getUnionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionType__Group__1__Impl
	rule__UnionType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeAccess().getNameAssignment_1()); }
(rule__UnionType__NameAssignment_1)
{ after(grammarAccess.getUnionTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionType__Group__2__Impl
	rule__UnionType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeAccess().getBeginParserRuleCall_2()); }
	rulebegin
{ after(grammarAccess.getUnionTypeAccess().getBeginParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionType__Group__3__Impl
	rule__UnionType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeAccess().getElementsAssignment_3()); }
(rule__UnionType__ElementsAssignment_3)
{ after(grammarAccess.getUnionTypeAccess().getElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionType__Group__4__Impl
	rule__UnionType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getUnionTypeAccess().getGroup_4()); }
(rule__UnionType__Group_4__0)
{ after(grammarAccess.getUnionTypeAccess().getGroup_4()); }
)
(
{ before(grammarAccess.getUnionTypeAccess().getGroup_4()); }
(rule__UnionType__Group_4__0)*
{ after(grammarAccess.getUnionTypeAccess().getGroup_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeAccess().getEndParserRuleCall_5()); }
	ruleend
{ after(grammarAccess.getUnionTypeAccess().getEndParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__UnionType__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionType__Group_4__0__Impl
	rule__UnionType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeAccess().getComaParserRuleCall_4_0()); }
	rulecoma
{ after(grammarAccess.getUnionTypeAccess().getComaParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionType__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeAccess().getElementsAssignment_4_1()); }
(rule__UnionType__ElementsAssignment_4_1)
{ after(grammarAccess.getUnionTypeAccess().getElementsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__0__Impl
	rule__FunctionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getFunctionKeyword_0()); }

	'function' 

{ after(grammarAccess.getFunctionDeclarationAccess().getFunctionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__1__Impl
	rule__FunctionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getNameAssignment_1()); }
(rule__FunctionDeclaration__NameAssignment_1)
{ after(grammarAccess.getFunctionDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__2__Impl
	rule__FunctionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getLessThanSignKeyword_2()); }

	'<' 

{ after(grammarAccess.getFunctionDeclarationAccess().getLessThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__3__Impl
	rule__FunctionDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getLangAssignment_3()); }
(rule__FunctionDeclaration__LangAssignment_3)
{ after(grammarAccess.getFunctionDeclarationAccess().getLangAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__4__Impl
	rule__FunctionDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getGreaterThanSignKeyword_4()); }

	'>' 

{ after(grammarAccess.getFunctionDeclarationAccess().getGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__5__Impl
	rule__FunctionDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getOpenParParserRuleCall_5()); }
	ruleopenPar
{ after(grammarAccess.getFunctionDeclarationAccess().getOpenParParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__6__Impl
	rule__FunctionDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getArgsAssignment_6()); }
(rule__FunctionDeclaration__ArgsAssignment_6)?
{ after(grammarAccess.getFunctionDeclarationAccess().getArgsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getCloseParParserRuleCall_7()); }
	ruleclosePar
{ after(grammarAccess.getFunctionDeclarationAccess().getCloseParParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ArgumentsDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentsDeclaration__Group__0__Impl
	rule__ArgumentsDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsDeclarationAccess().getArgumentsAssignment_0()); }
(rule__ArgumentsDeclaration__ArgumentsAssignment_0)
{ after(grammarAccess.getArgumentsDeclarationAccess().getArgumentsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentsDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentsDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsDeclarationAccess().getArgumentsAssignment_1()); }
(rule__ArgumentsDeclaration__ArgumentsAssignment_1)*
{ after(grammarAccess.getArgumentsDeclarationAccess().getArgumentsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arg__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group__0__Impl
	rule__Arg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getModifierAssignment_0()); }
(rule__Arg__ModifierAssignment_0)
{ after(grammarAccess.getArgAccess().getModifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arg__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group__1__Impl
	rule__Arg__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getTypeAssignment_1()); }
(rule__Arg__TypeAssignment_1)
{ after(grammarAccess.getArgAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arg__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getNameAssignment_2()); }
(rule__Arg__NameAssignment_2)?
{ after(grammarAccess.getArgAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ProcessingDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessingDeclaration__Group__0__Impl
	rule__ProcessingDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessingDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessingDeclarationAccess().getProcessingKeyword_0()); }

	'processing' 

{ after(grammarAccess.getProcessingDeclarationAccess().getProcessingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessingDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessingDeclaration__Group__1__Impl
	rule__ProcessingDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessingDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessingDeclarationAccess().getNameAssignment_1()); }
(rule__ProcessingDeclaration__NameAssignment_1)
{ after(grammarAccess.getProcessingDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessingDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessingDeclaration__Group__2__Impl
	rule__ProcessingDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessingDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessingDeclarationAccess().getOpenParParserRuleCall_2()); }
	ruleopenPar
{ after(grammarAccess.getProcessingDeclarationAccess().getOpenParParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessingDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessingDeclaration__Group__3__Impl
	rule__ProcessingDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessingDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessingDeclarationAccess().getArgsAssignment_3()); }
(rule__ProcessingDeclaration__ArgsAssignment_3)?
{ after(grammarAccess.getProcessingDeclarationAccess().getArgsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessingDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessingDeclaration__Group__4__Impl
	rule__ProcessingDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessingDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessingDeclarationAccess().getCloseParParserRuleCall_4()); }
	ruleclosePar
{ after(grammarAccess.getProcessingDeclarationAccess().getCloseParParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessingDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessingDeclaration__Group__5__Impl
	rule__ProcessingDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessingDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessingDeclarationAccess().getBeginParserRuleCall_5()); }
	rulebegin
{ after(grammarAccess.getProcessingDeclarationAccess().getBeginParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessingDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessingDeclaration__Group__6__Impl
	rule__ProcessingDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessingDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessingDeclarationAccess().getLocalParametersAssignment_6()); }
(rule__ProcessingDeclaration__LocalParametersAssignment_6)*
{ after(grammarAccess.getProcessingDeclarationAccess().getLocalParametersAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessingDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessingDeclaration__Group__7__Impl
	rule__ProcessingDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessingDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessingDeclarationAccess().getLocalEventsAssignment_7()); }
(rule__ProcessingDeclaration__LocalEventsAssignment_7)*
{ after(grammarAccess.getProcessingDeclarationAccess().getLocalEventsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessingDeclaration__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessingDeclaration__Group__8__Impl
	rule__ProcessingDeclaration__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessingDeclaration__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessingDeclarationAccess().getStatementsAssignment_8()); }
(rule__ProcessingDeclaration__StatementsAssignment_8)*
{ after(grammarAccess.getProcessingDeclarationAccess().getStatementsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessingDeclaration__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessingDeclaration__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessingDeclaration__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessingDeclarationAccess().getEndParserRuleCall_9()); }
	ruleend
{ after(grammarAccess.getProcessingDeclarationAccess().getEndParserRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__LocalParameterDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalParameterDeclaration__Group__0__Impl
	rule__LocalParameterDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameterDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterDeclarationAccess().getParameterKeyword_0()); }

	'parameter' 

{ after(grammarAccess.getLocalParameterDeclarationAccess().getParameterKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalParameterDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalParameterDeclaration__Group__1__Impl
	rule__LocalParameterDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameterDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterDeclarationAccess().getTypeAssignment_1()); }
(rule__LocalParameterDeclaration__TypeAssignment_1)
{ after(grammarAccess.getLocalParameterDeclarationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalParameterDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalParameterDeclaration__Group__2__Impl
	rule__LocalParameterDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameterDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterDeclarationAccess().getNameAssignment_2()); }
(rule__LocalParameterDeclaration__NameAssignment_2)
{ after(grammarAccess.getLocalParameterDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalParameterDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalParameterDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameterDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterDeclarationAccess().getGroup_3()); }
(rule__LocalParameterDeclaration__Group_3__0)?
{ after(grammarAccess.getLocalParameterDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LocalParameterDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalParameterDeclaration__Group_3__0__Impl
	rule__LocalParameterDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameterDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterDeclarationAccess().getHasValueAssignment_3_0()); }
(rule__LocalParameterDeclaration__HasValueAssignment_3_0)
{ after(grammarAccess.getLocalParameterDeclarationAccess().getHasValueAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalParameterDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalParameterDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameterDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterDeclarationAccess().getValueAssignment_3_1()); }
(rule__LocalParameterDeclaration__ValueAssignment_3_1)
{ after(grammarAccess.getLocalParameterDeclarationAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ifblock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ifblock__Group__0__Impl
	rule__Ifblock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifblock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfblockAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfblockAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ifblock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ifblock__Group__1__Impl
	rule__Ifblock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifblock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfblockAccess().getEventNameAssignment_1()); }
(rule__Ifblock__EventNameAssignment_1)
{ after(grammarAccess.getIfblockAccess().getEventNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ifblock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ifblock__Group__2__Impl
	rule__Ifblock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifblock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfblockAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getIfblockAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ifblock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ifblock__Group__3__Impl
	rule__Ifblock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifblock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfblockAccess().getBeginParserRuleCall_3()); }
	rulebegin
{ after(grammarAccess.getIfblockAccess().getBeginParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ifblock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ifblock__Group__4__Impl
	rule__Ifblock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifblock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getIfblockAccess().getIfBlocksAssignment_4()); }
(rule__Ifblock__IfBlocksAssignment_4)
{ after(grammarAccess.getIfblockAccess().getIfBlocksAssignment_4()); }
)
(
{ before(grammarAccess.getIfblockAccess().getIfBlocksAssignment_4()); }
(rule__Ifblock__IfBlocksAssignment_4)*
{ after(grammarAccess.getIfblockAccess().getIfBlocksAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ifblock__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ifblock__Group__5__Impl
	rule__Ifblock__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifblock__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfblockAccess().getEndParserRuleCall_5()); }
	ruleend
{ after(grammarAccess.getIfblockAccess().getEndParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ifblock__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ifblock__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifblock__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfblockAccess().getGroup_6()); }
(rule__Ifblock__Group_6__0)?
{ after(grammarAccess.getIfblockAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Ifblock__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ifblock__Group_6__0__Impl
	rule__Ifblock__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifblock__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfblockAccess().getHasElseAssignment_6_0()); }
(rule__Ifblock__HasElseAssignment_6_0)
{ after(grammarAccess.getIfblockAccess().getHasElseAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ifblock__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ifblock__Group_6__1__Impl
	rule__Ifblock__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifblock__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfblockAccess().getBeginParserRuleCall_6_1()); }
	rulebegin
{ after(grammarAccess.getIfblockAccess().getBeginParserRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ifblock__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ifblock__Group_6__2__Impl
	rule__Ifblock__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifblock__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getIfblockAccess().getElseBlocksAssignment_6_2()); }
(rule__Ifblock__ElseBlocksAssignment_6_2)
{ after(grammarAccess.getIfblockAccess().getElseBlocksAssignment_6_2()); }
)
(
{ before(grammarAccess.getIfblockAccess().getElseBlocksAssignment_6_2()); }
(rule__Ifblock__ElseBlocksAssignment_6_2)*
{ after(grammarAccess.getIfblockAccess().getElseBlocksAssignment_6_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ifblock__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ifblock__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifblock__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfblockAccess().getEndParserRuleCall_6_3()); }
	ruleend
{ after(grammarAccess.getIfblockAccess().getEndParserRuleCall_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Whileblock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Whileblock__Group__0__Impl
	rule__Whileblock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Whileblock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileblockAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhileblockAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Whileblock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Whileblock__Group__1__Impl
	rule__Whileblock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Whileblock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileblockAccess().getEventNameAssignment_1()); }
(rule__Whileblock__EventNameAssignment_1)
{ after(grammarAccess.getWhileblockAccess().getEventNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Whileblock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Whileblock__Group__2__Impl
	rule__Whileblock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Whileblock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileblockAccess().getDoKeyword_2()); }

	'do' 

{ after(grammarAccess.getWhileblockAccess().getDoKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Whileblock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Whileblock__Group__3__Impl
	rule__Whileblock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Whileblock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileblockAccess().getBeginParserRuleCall_3()); }
	rulebegin
{ after(grammarAccess.getWhileblockAccess().getBeginParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Whileblock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Whileblock__Group__4__Impl
	rule__Whileblock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Whileblock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getWhileblockAccess().getBlocksAssignment_4()); }
(rule__Whileblock__BlocksAssignment_4)
{ after(grammarAccess.getWhileblockAccess().getBlocksAssignment_4()); }
)
(
{ before(grammarAccess.getWhileblockAccess().getBlocksAssignment_4()); }
(rule__Whileblock__BlocksAssignment_4)*
{ after(grammarAccess.getWhileblockAccess().getBlocksAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Whileblock__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Whileblock__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Whileblock__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileblockAccess().getEndParserRuleCall_5()); }
	ruleend
{ after(grammarAccess.getWhileblockAccess().getEndParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FunctionCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getExecuteKeyword_0()); }

	'execute' 

{ after(grammarAccess.getFunctionCallAccess().getExecuteKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getNameAssignment_1()); }
(rule__FunctionCall__NameAssignment_1)
{ after(grammarAccess.getFunctionCallAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getOpenParParserRuleCall_2()); }
	ruleopenPar
{ after(grammarAccess.getFunctionCallAccess().getOpenParParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__3__Impl
	rule__FunctionCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_3()); }
(rule__FunctionCall__Group_3__0)?
{ after(grammarAccess.getFunctionCallAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getCloseParParserRuleCall_4()); }
	ruleclosePar
{ after(grammarAccess.getFunctionCallAccess().getCloseParParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionCall__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_3__0__Impl
	rule__FunctionCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getArgumentsAssignment_3_0()); }
(rule__FunctionCall__ArgumentsAssignment_3_0)
{ after(grammarAccess.getFunctionCallAccess().getArgumentsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_3_1()); }
(rule__FunctionCall__Group_3_1__0)*
{ after(grammarAccess.getFunctionCallAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCall__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_3_1__0__Impl
	rule__FunctionCall__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getComaParserRuleCall_3_1_0()); }
	rulecoma
{ after(grammarAccess.getFunctionCallAccess().getComaParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getArgumentsAssignment_3_1_1()); }
(rule__FunctionCall__ArgumentsAssignment_3_1_1)
{ after(grammarAccess.getFunctionCallAccess().getArgumentsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrototypeDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrototypeDeclaration__Group__0__Impl
	rule__PrototypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrototypeDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrototypeDeclarationAccess().getPrototypeKeyword_0()); }

	'prototype' 

{ after(grammarAccess.getPrototypeDeclarationAccess().getPrototypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrototypeDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrototypeDeclaration__Group__1__Impl
	rule__PrototypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrototypeDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrototypeDeclarationAccess().getNameAssignment_1()); }
(rule__PrototypeDeclaration__NameAssignment_1)
{ after(grammarAccess.getPrototypeDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrototypeDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrototypeDeclaration__Group__2__Impl
	rule__PrototypeDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrototypeDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrototypeDeclarationAccess().getGroup_2()); }
(rule__PrototypeDeclaration__Group_2__0)?
{ after(grammarAccess.getPrototypeDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrototypeDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrototypeDeclaration__Group__3__Impl
	rule__PrototypeDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrototypeDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrototypeDeclarationAccess().getBeginParserRuleCall_3()); }
	rulebegin
{ after(grammarAccess.getPrototypeDeclarationAccess().getBeginParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrototypeDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrototypeDeclaration__Group__4__Impl
	rule__PrototypeDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrototypeDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrototypeDeclarationAccess().getDefinitionsAssignment_4()); }
(rule__PrototypeDeclaration__DefinitionsAssignment_4)*
{ after(grammarAccess.getPrototypeDeclarationAccess().getDefinitionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrototypeDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrototypeDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrototypeDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrototypeDeclarationAccess().getEndParserRuleCall_5()); }
	ruleend
{ after(grammarAccess.getPrototypeDeclarationAccess().getEndParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PrototypeDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrototypeDeclaration__Group_2__0__Impl
	rule__PrototypeDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrototypeDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrototypeDeclarationAccess().getIsKeyword_2_0()); }

	'is' 

{ after(grammarAccess.getPrototypeDeclarationAccess().getIsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrototypeDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrototypeDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrototypeDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrototypeDeclarationAccess().getSuperTypeAssignment_2_1()); }
(rule__PrototypeDeclaration__SuperTypeAssignment_2_1)
{ after(grammarAccess.getPrototypeDeclarationAccess().getSuperTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group__0__Impl
	rule__SignalDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getSignalKeyword_0()); }

	'signal' 

{ after(grammarAccess.getSignalDeclarationAccess().getSignalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getNameAssignment_1()); }
(rule__SignalDeclaration__NameAssignment_1)
{ after(grammarAccess.getSignalDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EventDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group__0__Impl
	rule__EventDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getEventKeyword_0()); }

	'event' 

{ after(grammarAccess.getEventDeclarationAccess().getEventKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group__1__Impl
	rule__EventDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getNameAssignment_1()); }
(rule__EventDeclaration__NameAssignment_1)
{ after(grammarAccess.getEventDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group__2__Impl
	rule__EventDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getEventDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group__3__Impl
	rule__EventDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getConditionsAssignment_3()); }
(rule__EventDeclaration__ConditionsAssignment_3)
{ after(grammarAccess.getEventDeclarationAccess().getConditionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group__4__Impl
	rule__EventDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getGroup_4()); }
(rule__EventDeclaration__Group_4__0)*
{ after(grammarAccess.getEventDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getEventDeclarationAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__EventDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group_4__0__Impl
	rule__EventDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getComaParserRuleCall_4_0()); }
	rulecoma
{ after(grammarAccess.getEventDeclarationAccess().getComaParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getConditionsAssignment_4_1()); }
(rule__EventDeclaration__ConditionsAssignment_4_1)
{ after(grammarAccess.getEventDeclarationAccess().getConditionsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EventCondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventCondition__Group__0__Impl
	rule__EventCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventCondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventConditionAccess().getLeftPartAssignment_0()); }
(rule__EventCondition__LeftPartAssignment_0)
{ after(grammarAccess.getEventConditionAccess().getLeftPartAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventCondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventCondition__Group__1__Impl
	rule__EventCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventCondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventConditionAccess().getCondAssignment_1()); }
(rule__EventCondition__CondAssignment_1)
{ after(grammarAccess.getEventConditionAccess().getCondAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventCondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventCondition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventCondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventConditionAccess().getAlternatives_2()); }
(rule__EventCondition__Alternatives_2)
{ after(grammarAccess.getEventConditionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParameterDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group__0__Impl
	rule__ParameterDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getParameterKeyword_0()); }

	'parameter' 

{ after(grammarAccess.getParameterDeclarationAccess().getParameterKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group__1__Impl
	rule__ParameterDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getTypeNameAssignment_1()); }
(rule__ParameterDeclaration__TypeNameAssignment_1)
{ after(grammarAccess.getParameterDeclarationAccess().getTypeNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group__2__Impl
	rule__ParameterDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getGroup_2()); }
(rule__ParameterDeclaration__Group_2__0)?
{ after(grammarAccess.getParameterDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group__3__Impl
	rule__ParameterDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getHasInfiniteWriterAssignment_3()); }
(rule__ParameterDeclaration__HasInfiniteWriterAssignment_3)?
{ after(grammarAccess.getParameterDeclarationAccess().getHasInfiniteWriterAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group__4__Impl
	rule__ParameterDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getNameAssignment_4()); }
(rule__ParameterDeclaration__NameAssignment_4)
{ after(grammarAccess.getParameterDeclarationAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getAlternatives_5()); }
(rule__ParameterDeclaration__Alternatives_5)?
{ after(grammarAccess.getParameterDeclarationAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ParameterDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group_2__0__Impl
	rule__ParameterDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getHasNbWAssignment_2_0()); }
(rule__ParameterDeclaration__HasNbWAssignment_2_0)
{ after(grammarAccess.getParameterDeclarationAccess().getHasNbWAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group_2__1__Impl
	rule__ParameterDeclaration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getOpenParParserRuleCall_2_1()); }
	ruleopenPar
{ after(grammarAccess.getParameterDeclarationAccess().getOpenParParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group_2__2__Impl
	rule__ParameterDeclaration__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getNbwAssignment_2_2()); }
(rule__ParameterDeclaration__NbwAssignment_2_2)
{ after(grammarAccess.getParameterDeclarationAccess().getNbwAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getCloseParParserRuleCall_2_3()); }
	ruleclosePar
{ after(grammarAccess.getParameterDeclarationAccess().getCloseParParserRuleCall_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParameterDeclaration__Group_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group_5_0__0__Impl
	rule__ParameterDeclaration__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getHasValueAssignment_5_0_0()); }
(rule__ParameterDeclaration__HasValueAssignment_5_0_0)
{ after(grammarAccess.getParameterDeclarationAccess().getHasValueAssignment_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group_5_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getValueAssignment_5_0_1()); }
(rule__ParameterDeclaration__ValueAssignment_5_0_1)
{ after(grammarAccess.getParameterDeclarationAccess().getValueAssignment_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterDeclaration__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group_5_1__0__Impl
	rule__ParameterDeclaration__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getHasConfigAssignment_5_1_0()); }
(rule__ParameterDeclaration__HasConfigAssignment_5_1_0)
{ after(grammarAccess.getParameterDeclarationAccess().getHasConfigAssignment_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getLessThanSignGreaterThanSignKeyword_5_1_1()); }

	'<>' 

{ after(grammarAccess.getParameterDeclarationAccess().getLessThanSignGreaterThanSignKeyword_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterDeclaration__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group_5_2__0__Impl
	rule__ParameterDeclaration__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getHasConfigWithDefaultValueAssignment_5_2_0()); }
(rule__ParameterDeclaration__HasConfigWithDefaultValueAssignment_5_2_0)
{ after(grammarAccess.getParameterDeclarationAccess().getHasConfigWithDefaultValueAssignment_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group_5_2__1__Impl
	rule__ParameterDeclaration__Group_5_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getLessThanSignKeyword_5_2_1()); }

	'<' 

{ after(grammarAccess.getParameterDeclarationAccess().getLessThanSignKeyword_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group_5_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group_5_2__2__Impl
	rule__ParameterDeclaration__Group_5_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_5_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getValueAssignment_5_2_2()); }
(rule__ParameterDeclaration__ValueAssignment_5_2_2)
{ after(grammarAccess.getParameterDeclarationAccess().getValueAssignment_5_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group_5_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group_5_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_5_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getGreaterThanSignKeyword_5_2_3()); }

	'>' 

{ after(grammarAccess.getParameterDeclarationAccess().getGreaterThanSignKeyword_5_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StatesetDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesetDeclaration__Group__0__Impl
	rule__StatesetDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getStatesetKeyword_0()); }

	'stateset' 

{ after(grammarAccess.getStatesetDeclarationAccess().getStatesetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatesetDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesetDeclaration__Group__1__Impl
	rule__StatesetDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getNameAssignment_1()); }
(rule__StatesetDeclaration__NameAssignment_1)
{ after(grammarAccess.getStatesetDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatesetDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesetDeclaration__Group__2__Impl
	rule__StatesetDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getStatesetDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatesetDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesetDeclaration__Group__3__Impl
	rule__StatesetDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getStatesAssignment_3()); }
(rule__StatesetDeclaration__StatesAssignment_3)
{ after(grammarAccess.getStatesetDeclarationAccess().getStatesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatesetDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesetDeclaration__Group__4__Impl
	rule__StatesetDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getComaParserRuleCall_4()); }
	rulecoma
{ after(grammarAccess.getStatesetDeclarationAccess().getComaParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatesetDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesetDeclaration__Group__5__Impl
	rule__StatesetDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getStatesAssignment_5()); }
(rule__StatesetDeclaration__StatesAssignment_5)
{ after(grammarAccess.getStatesetDeclarationAccess().getStatesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatesetDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesetDeclaration__Group__6__Impl
	rule__StatesetDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getGroup_6()); }
(rule__StatesetDeclaration__Group_6__0)*
{ after(grammarAccess.getStatesetDeclarationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatesetDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesetDeclaration__Group__7__Impl
	rule__StatesetDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getStatesetDeclarationAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatesetDeclaration__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesetDeclaration__Group__8__Impl
	rule__StatesetDeclaration__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getEqualsSignKeyword_8()); }

	'=' 

{ after(grammarAccess.getStatesetDeclarationAccess().getEqualsSignKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatesetDeclaration__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesetDeclaration__Group__9__Impl
	rule__StatesetDeclaration__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getInitAssignment_9()); }
(rule__StatesetDeclaration__InitAssignment_9)
{ after(grammarAccess.getStatesetDeclarationAccess().getInitAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatesetDeclaration__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesetDeclaration__Group__10__Impl
	rule__StatesetDeclaration__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getBeginParserRuleCall_10()); }
	rulebegin
{ after(grammarAccess.getStatesetDeclarationAccess().getBeginParserRuleCall_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatesetDeclaration__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesetDeclaration__Group__11__Impl
	rule__StatesetDeclaration__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getTransitionsAssignment_11()); }
(rule__StatesetDeclaration__TransitionsAssignment_11)*
{ after(grammarAccess.getStatesetDeclarationAccess().getTransitionsAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatesetDeclaration__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesetDeclaration__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getEndParserRuleCall_12()); }
	ruleend
{ after(grammarAccess.getStatesetDeclarationAccess().getEndParserRuleCall_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__StatesetDeclaration__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesetDeclaration__Group_6__0__Impl
	rule__StatesetDeclaration__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getComaParserRuleCall_6_0()); }
	rulecoma
{ after(grammarAccess.getStatesetDeclarationAccess().getComaParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatesetDeclaration__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesetDeclaration__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getStatesAssignment_6_1()); }
(rule__StatesetDeclaration__StatesAssignment_6_1)
{ after(grammarAccess.getStatesetDeclarationAccess().getStatesAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TransitionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group__0__Impl
	rule__TransitionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getTransitionKeyword_0()); }

	'transition' 

{ after(grammarAccess.getTransitionDeclarationAccess().getTransitionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group__1__Impl
	rule__TransitionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getFromKeyword_1()); }

	'from' 

{ after(grammarAccess.getTransitionDeclarationAccess().getFromKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group__2__Impl
	rule__TransitionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getFromAssignment_2()); }
(rule__TransitionDeclaration__FromAssignment_2)
{ after(grammarAccess.getTransitionDeclarationAccess().getFromAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group__3__Impl
	rule__TransitionDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getToKeyword_3()); }

	'to' 

{ after(grammarAccess.getTransitionDeclarationAccess().getToKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group__4__Impl
	rule__TransitionDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getToAssignment_4()); }
(rule__TransitionDeclaration__ToAssignment_4)
{ after(grammarAccess.getTransitionDeclarationAccess().getToAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group__5__Impl
	rule__TransitionDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getOnKeyword_5()); }

	'on' 

{ after(grammarAccess.getTransitionDeclarationAccess().getOnKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group__6__Impl
	rule__TransitionDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getEvtAssignment_6()); }
(rule__TransitionDeclaration__EvtAssignment_6)
{ after(grammarAccess.getTransitionDeclarationAccess().getEvtAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getGroup_7()); }
(rule__TransitionDeclaration__Group_7__0)?
{ after(grammarAccess.getTransitionDeclarationAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__TransitionDeclaration__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group_7__0__Impl
	rule__TransitionDeclaration__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getRaiseAssignment_7_0()); }
(rule__TransitionDeclaration__RaiseAssignment_7_0)
{ after(grammarAccess.getTransitionDeclarationAccess().getRaiseAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionDeclaration__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getSigAssignment_7_1()); }
(rule__TransitionDeclaration__SigAssignment_7_1)
{ after(grammarAccess.getTransitionDeclarationAccess().getSigAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstanceDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDeclaration__Group__0__Impl
	rule__InstanceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getInstanceKeyword_0()); }

	'instance' 

{ after(grammarAccess.getInstanceDeclarationAccess().getInstanceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDeclaration__Group__1__Impl
	rule__InstanceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getTypeNameAssignment_1()); }
(rule__InstanceDeclaration__TypeNameAssignment_1)
{ after(grammarAccess.getInstanceDeclarationAccess().getTypeNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDeclaration__Group__2__Impl
	rule__InstanceDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getLeftSquareBracketRightSquareBracketKeyword_2()); }
(
	'[]' 
)?
{ after(grammarAccess.getInstanceDeclarationAccess().getLeftSquareBracketRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDeclaration__Group__3__Impl
	rule__InstanceDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getNameAssignment_3()); }
(rule__InstanceDeclaration__NameAssignment_3)
{ after(grammarAccess.getInstanceDeclarationAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getINHIBITKeyword_4()); }
(
	'INHIBIT' 
)?
{ after(grammarAccess.getInstanceDeclarationAccess().getINHIBITKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InteractionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionDeclaration__Group__0__Impl
	rule__InteractionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getGroup_0()); }
(rule__InteractionDeclaration__Group_0__0)?
{ after(grammarAccess.getInteractionDeclarationAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionDeclaration__Group__1__Impl
	rule__InteractionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getGroup_1()); }
(rule__InteractionDeclaration__Group_1__0)?
{ after(grammarAccess.getInteractionDeclarationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionDeclaration__Group__2__Impl
	rule__InteractionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getBeginParserRuleCall_2()); }
	rulebegin
{ after(grammarAccess.getInteractionDeclarationAccess().getBeginParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionDeclaration__Group__3__Impl
	rule__InteractionDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getInteractionDeclarationAccess().getIcallsAssignment_3()); }
(rule__InteractionDeclaration__IcallsAssignment_3)
{ after(grammarAccess.getInteractionDeclarationAccess().getIcallsAssignment_3()); }
)
(
{ before(grammarAccess.getInteractionDeclarationAccess().getIcallsAssignment_3()); }
(rule__InteractionDeclaration__IcallsAssignment_3)*
{ after(grammarAccess.getInteractionDeclarationAccess().getIcallsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionDeclaration__Group__4__Impl
	rule__InteractionDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getINHIBITKeyword_4()); }
(
	'INHIBIT' 
)?
{ after(grammarAccess.getInteractionDeclarationAccess().getINHIBITKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getEndParserRuleCall_5()); }
	ruleend
{ after(grammarAccess.getInteractionDeclarationAccess().getEndParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__InteractionDeclaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionDeclaration__Group_0__0__Impl
	rule__InteractionDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getWwhenAssignment_0_0()); }
(rule__InteractionDeclaration__WwhenAssignment_0_0)
{ after(grammarAccess.getInteractionDeclarationAccess().getWwhenAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionDeclaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionDeclaration__Group_0__1__Impl
	rule__InteractionDeclaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getOpenParParserRuleCall_0_1()); }
	ruleopenPar
{ after(grammarAccess.getInteractionDeclarationAccess().getOpenParParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionDeclaration__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionDeclaration__Group_0__2__Impl
	rule__InteractionDeclaration__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getStatesetAssignment_0_2()); }
(rule__InteractionDeclaration__StatesetAssignment_0_2)
{ after(grammarAccess.getInteractionDeclarationAccess().getStatesetAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionDeclaration__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionDeclaration__Group_0__3__Impl
	rule__InteractionDeclaration__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getColonColonKeyword_0_3()); }

	'::' 

{ after(grammarAccess.getInteractionDeclarationAccess().getColonColonKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionDeclaration__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionDeclaration__Group_0__4__Impl
	rule__InteractionDeclaration__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getWstateAssignment_0_4()); }
(rule__InteractionDeclaration__WstateAssignment_0_4)
{ after(grammarAccess.getInteractionDeclarationAccess().getWstateAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionDeclaration__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionDeclaration__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getCloseParParserRuleCall_0_5()); }
	ruleclosePar
{ after(grammarAccess.getInteractionDeclarationAccess().getCloseParParserRuleCall_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__InteractionDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionDeclaration__Group_1__0__Impl
	rule__InteractionDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getIifAssignment_1_0()); }
(rule__InteractionDeclaration__IifAssignment_1_0)
{ after(grammarAccess.getInteractionDeclarationAccess().getIifAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionDeclaration__Group_1__1__Impl
	rule__InteractionDeclaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getOpenParParserRuleCall_1_1()); }
	ruleopenPar
{ after(grammarAccess.getInteractionDeclarationAccess().getOpenParParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionDeclaration__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionDeclaration__Group_1__2__Impl
	rule__InteractionDeclaration__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getEventAssignment_1_2()); }
(rule__InteractionDeclaration__EventAssignment_1_2)
{ after(grammarAccess.getInteractionDeclarationAccess().getEventAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionDeclaration__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionDeclaration__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getCloseParParserRuleCall_1_3()); }
	ruleclosePar
{ after(grammarAccess.getInteractionDeclarationAccess().getCloseParParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InteractionCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionCall__Group__0__Impl
	rule__InteractionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionCallAccess().getInteractionKeyword_0()); }

	'interaction' 

{ after(grammarAccess.getInteractionCallAccess().getInteractionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionCall__Group__1__Impl
	rule__InteractionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionCallAccess().getFctNameAssignment_1()); }
(rule__InteractionCall__FctNameAssignment_1)
{ after(grammarAccess.getInteractionCallAccess().getFctNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionCall__Group__2__Impl
	rule__InteractionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionCallAccess().getOpenParParserRuleCall_2()); }
	ruleopenPar
{ after(grammarAccess.getInteractionCallAccess().getOpenParParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionCall__Group__3__Impl
	rule__InteractionCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionCallAccess().getGroup_3()); }
(rule__InteractionCall__Group_3__0)?
{ after(grammarAccess.getInteractionCallAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionCallAccess().getCloseParParserRuleCall_4()); }
	ruleclosePar
{ after(grammarAccess.getInteractionCallAccess().getCloseParParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InteractionCall__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionCall__Group_3__0__Impl
	rule__InteractionCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionCall__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionCallAccess().getArgumentsAssignment_3_0()); }
(rule__InteractionCall__ArgumentsAssignment_3_0)
{ after(grammarAccess.getInteractionCallAccess().getArgumentsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionCall__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionCall__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionCall__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionCallAccess().getGroup_3_1()); }
(rule__InteractionCall__Group_3_1__0)*
{ after(grammarAccess.getInteractionCallAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InteractionCall__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionCall__Group_3_1__0__Impl
	rule__InteractionCall__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionCall__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionCallAccess().getComaParserRuleCall_3_1_0()); }
	rulecoma
{ after(grammarAccess.getInteractionCallAccess().getComaParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionCall__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractionCall__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionCall__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionCallAccess().getArgumentsAssignment_3_1_1()); }
(rule__InteractionCall__ArgumentsAssignment_3_1_1)
{ after(grammarAccess.getInteractionCallAccess().getArgumentsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group__0__Impl
	rule__ReferenceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getReferenceKeyword_0()); }

	'reference' 

{ after(grammarAccess.getReferenceDeclarationAccess().getReferenceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group__1__Impl
	rule__ReferenceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getReferenceDeclarationAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group__2__Impl
	rule__ReferenceDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getTypeNameAssignment_2()); }
(rule__ReferenceDeclaration__TypeNameAssignment_2)
{ after(grammarAccess.getReferenceDeclarationAccess().getTypeNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group__3__Impl
	rule__ReferenceDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getReferenceDeclarationAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group__4__Impl
	rule__ReferenceDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getUpwayAssignment_4()); }
(rule__ReferenceDeclaration__UpwayAssignment_4)?
{ after(grammarAccess.getReferenceDeclarationAccess().getUpwayAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group__5__Impl
	rule__ReferenceDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getNameAssignment_5()); }
(rule__ReferenceDeclaration__NameAssignment_5)
{ after(grammarAccess.getReferenceDeclarationAccess().getNameAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getGroup_6()); }
(rule__ReferenceDeclaration__Group_6__0)?
{ after(grammarAccess.getReferenceDeclarationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ReferenceDeclaration__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group_6__0__Impl
	rule__ReferenceDeclaration__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getAsKeyword_6_0()); }

	'as' 

{ after(grammarAccess.getReferenceDeclarationAccess().getAsKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclaration__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getAliasAssignment_6_1()); }
(rule__ReferenceDeclaration__AliasAssignment_6_1)
{ after(grammarAccess.getReferenceDeclarationAccess().getAliasAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getNameAssignment_0()); }
(rule__QualifiedName__NameAssignment_0)
{ after(grammarAccess.getQualifiedNameAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getDotParserRuleCall_1_0()); }
	ruledot
{ after(grammarAccess.getQualifiedNameAccess().getDotParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getNameAssignment_1_1()); }
(rule__QualifiedName__NameAssignment_1_1)
{ after(grammarAccess.getQualifiedNameAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WrapperDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__0__Impl
	rule__WrapperDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getWrapperKeyword_0()); }

	'wrapper' 

{ after(grammarAccess.getWrapperDeclarationAccess().getWrapperKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__1__Impl
	rule__WrapperDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getNameAssignment_1()); }
(rule__WrapperDeclaration__NameAssignment_1)
{ after(grammarAccess.getWrapperDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__2__Impl
	rule__WrapperDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getBeginParserRuleCall_2()); }
	rulebegin
{ after(grammarAccess.getWrapperDeclarationAccess().getBeginParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__3__Impl
	rule__WrapperDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getLinkLibraryKeyword_3()); }

	'link-library' 

{ after(grammarAccess.getWrapperDeclarationAccess().getLinkLibraryKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__4__Impl
	rule__WrapperDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getBeginAccParserRuleCall_4()); }
	rulebeginAcc
{ after(grammarAccess.getWrapperDeclarationAccess().getBeginAccParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__5__Impl
	rule__WrapperDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getLinkAssignment_5()); }
(rule__WrapperDeclaration__LinkAssignment_5)
{ after(grammarAccess.getWrapperDeclarationAccess().getLinkAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__6__Impl
	rule__WrapperDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getEndAccParserRuleCall_6()); }
	ruleendAcc
{ after(grammarAccess.getWrapperDeclarationAccess().getEndAccParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__7__Impl
	rule__WrapperDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getImplementsFunctionsKeyword_7()); }

	'implements-functions' 

{ after(grammarAccess.getWrapperDeclarationAccess().getImplementsFunctionsKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__8__Impl
	rule__WrapperDeclaration__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getBeginAccParserRuleCall_8()); }
	rulebeginAcc
{ after(grammarAccess.getWrapperDeclarationAccess().getBeginAccParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__9__Impl
	rule__WrapperDeclaration__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getGroup_9()); }
(rule__WrapperDeclaration__Group_9__0)?
{ after(grammarAccess.getWrapperDeclarationAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__10__Impl
	rule__WrapperDeclaration__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getEndAccParserRuleCall_10()); }
	ruleendAcc
{ after(grammarAccess.getWrapperDeclarationAccess().getEndAccParserRuleCall_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__11__Impl
	rule__WrapperDeclaration__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getExternalObjectsKeyword_11()); }

	'external-objects' 

{ after(grammarAccess.getWrapperDeclarationAccess().getExternalObjectsKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__12__Impl
	rule__WrapperDeclaration__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getBeginAccParserRuleCall_12()); }
	rulebeginAcc
{ after(grammarAccess.getWrapperDeclarationAccess().getBeginAccParserRuleCall_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__13__Impl
	rule__WrapperDeclaration__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getGroup_13()); }
(rule__WrapperDeclaration__Group_13__0)?
{ after(grammarAccess.getWrapperDeclarationAccess().getGroup_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__14__Impl
	rule__WrapperDeclaration__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getEndAccParserRuleCall_14()); }
	ruleendAcc
{ after(grammarAccess.getWrapperDeclarationAccess().getEndAccParserRuleCall_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__15__Impl
	rule__WrapperDeclaration__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getExternalLibrariesKeyword_15()); }

	'external-libraries' 

{ after(grammarAccess.getWrapperDeclarationAccess().getExternalLibrariesKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__16
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__16__Impl
	rule__WrapperDeclaration__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__16__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getBeginAccParserRuleCall_16()); }
	rulebeginAcc
{ after(grammarAccess.getWrapperDeclarationAccess().getBeginAccParserRuleCall_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__17
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__17__Impl
	rule__WrapperDeclaration__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__17__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getGroup_17()); }
(rule__WrapperDeclaration__Group_17__0)?
{ after(grammarAccess.getWrapperDeclarationAccess().getGroup_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__18
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__18__Impl
	rule__WrapperDeclaration__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__18__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getEndAccParserRuleCall_18()); }
	ruleendAcc
{ after(grammarAccess.getWrapperDeclarationAccess().getEndAccParserRuleCall_18()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__19
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__19__Impl
	rule__WrapperDeclaration__Group__20
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__19__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getTestAppsKeyword_19()); }

	'test-apps' 

{ after(grammarAccess.getWrapperDeclarationAccess().getTestAppsKeyword_19()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__20
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__20__Impl
	rule__WrapperDeclaration__Group__21
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__20__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getBeginAccParserRuleCall_20()); }
	rulebeginAcc
{ after(grammarAccess.getWrapperDeclarationAccess().getBeginAccParserRuleCall_20()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__21
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__21__Impl
	rule__WrapperDeclaration__Group__22
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__21__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getGroup_21()); }
(rule__WrapperDeclaration__Group_21__0)?
{ after(grammarAccess.getWrapperDeclarationAccess().getGroup_21()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__22
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__22__Impl
	rule__WrapperDeclaration__Group__23
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__22__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getEndAccParserRuleCall_22()); }
	ruleendAcc
{ after(grammarAccess.getWrapperDeclarationAccess().getEndAccParserRuleCall_22()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group__23
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group__23__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group__23__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getEndParserRuleCall_23()); }
	ruleend
{ after(grammarAccess.getWrapperDeclarationAccess().getEndParserRuleCall_23()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















































rule__WrapperDeclaration__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group_9__0__Impl
	rule__WrapperDeclaration__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getFunctionsAssignment_9_0()); }
(rule__WrapperDeclaration__FunctionsAssignment_9_0)
{ after(grammarAccess.getWrapperDeclarationAccess().getFunctionsAssignment_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getGroup_9_1()); }
(rule__WrapperDeclaration__Group_9_1__0)*
{ after(grammarAccess.getWrapperDeclarationAccess().getGroup_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WrapperDeclaration__Group_9_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group_9_1__0__Impl
	rule__WrapperDeclaration__Group_9_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group_9_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getComaParserRuleCall_9_1_0()); }
	rulecoma
{ after(grammarAccess.getWrapperDeclarationAccess().getComaParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group_9_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group_9_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group_9_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getFunctionsAssignment_9_1_1()); }
(rule__WrapperDeclaration__FunctionsAssignment_9_1_1)
{ after(grammarAccess.getWrapperDeclarationAccess().getFunctionsAssignment_9_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WrapperDeclaration__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group_13__0__Impl
	rule__WrapperDeclaration__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getObjectsAssignment_13_0()); }
(rule__WrapperDeclaration__ObjectsAssignment_13_0)
{ after(grammarAccess.getWrapperDeclarationAccess().getObjectsAssignment_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getGroup_13_1()); }
(rule__WrapperDeclaration__Group_13_1__0)*
{ after(grammarAccess.getWrapperDeclarationAccess().getGroup_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WrapperDeclaration__Group_13_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group_13_1__0__Impl
	rule__WrapperDeclaration__Group_13_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group_13_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getComaParserRuleCall_13_1_0()); }
	rulecoma
{ after(grammarAccess.getWrapperDeclarationAccess().getComaParserRuleCall_13_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group_13_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group_13_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group_13_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getObjectsAssignment_13_1_1()); }
(rule__WrapperDeclaration__ObjectsAssignment_13_1_1)
{ after(grammarAccess.getWrapperDeclarationAccess().getObjectsAssignment_13_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WrapperDeclaration__Group_17__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group_17__0__Impl
	rule__WrapperDeclaration__Group_17__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group_17__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getLibrariesAssignment_17_0()); }
(rule__WrapperDeclaration__LibrariesAssignment_17_0)
{ after(grammarAccess.getWrapperDeclarationAccess().getLibrariesAssignment_17_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group_17__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group_17__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group_17__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getGroup_17_1()); }
(rule__WrapperDeclaration__Group_17_1__0)*
{ after(grammarAccess.getWrapperDeclarationAccess().getGroup_17_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WrapperDeclaration__Group_17_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group_17_1__0__Impl
	rule__WrapperDeclaration__Group_17_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group_17_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getComaParserRuleCall_17_1_0()); }
	rulecoma
{ after(grammarAccess.getWrapperDeclarationAccess().getComaParserRuleCall_17_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group_17_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group_17_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group_17_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getLibrariesAssignment_17_1_1()); }
(rule__WrapperDeclaration__LibrariesAssignment_17_1_1)
{ after(grammarAccess.getWrapperDeclarationAccess().getLibrariesAssignment_17_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WrapperDeclaration__Group_21__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group_21__0__Impl
	rule__WrapperDeclaration__Group_21__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group_21__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getTestsAssignment_21_0()); }
(rule__WrapperDeclaration__TestsAssignment_21_0)
{ after(grammarAccess.getWrapperDeclarationAccess().getTestsAssignment_21_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group_21__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group_21__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group_21__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getGroup_21_1()); }
(rule__WrapperDeclaration__Group_21_1__0)*
{ after(grammarAccess.getWrapperDeclarationAccess().getGroup_21_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WrapperDeclaration__Group_21_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group_21_1__0__Impl
	rule__WrapperDeclaration__Group_21_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group_21_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getComaParserRuleCall_21_1_0()); }
	rulecoma
{ after(grammarAccess.getWrapperDeclarationAccess().getComaParserRuleCall_21_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WrapperDeclaration__Group_21_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WrapperDeclaration__Group_21_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__Group_21_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getTestsAssignment_21_1_1()); }
(rule__WrapperDeclaration__TestsAssignment_21_1_1)
{ after(grammarAccess.getWrapperDeclarationAccess().getTestsAssignment_21_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Project__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getProjectAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Project__LanguagesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getLanguagesLanguageDeclarationParserRuleCall_1_0()); }
	ruleLanguageDeclaration{ after(grammarAccess.getProjectAccess().getLanguagesLanguageDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Project__TypesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getTypesDataTypeParserRuleCall_2_0()); }
	ruleDataType{ after(grammarAccess.getProjectAccess().getTypesDataTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Project__ValiditiesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getValiditiesValidityFunctionDeclarationParserRuleCall_3_0()); }
	rulevalidityFunctionDeclaration{ after(grammarAccess.getProjectAccess().getValiditiesValidityFunctionDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Project__ImportsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getImportsImportParserRuleCall_4_0()); }
	ruleImport{ after(grammarAccess.getProjectAccess().getImportsImportParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Project__FunctionsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getFunctionsFunctionDeclarationParserRuleCall_5_0()); }
	rulefunctionDeclaration{ after(grammarAccess.getProjectAccess().getFunctionsFunctionDeclarationParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Project__ImportsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getImportsImportParserRuleCall_6_0()); }
	ruleImport{ after(grammarAccess.getProjectAccess().getImportsImportParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Project__ProcessingsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getProcessingsProcessingDeclarationParserRuleCall_7_0()); }
	ruleProcessingDeclaration{ after(grammarAccess.getProjectAccess().getProcessingsProcessingDeclarationParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Project__ImportsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getImportsImportParserRuleCall_8_0()); }
	ruleImport{ after(grammarAccess.getProjectAccess().getImportsImportParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Project__PrototypesAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getPrototypesPrototypeDeclarationParserRuleCall_9_0()); }
	ruleprototypeDeclaration{ after(grammarAccess.getProjectAccess().getPrototypesPrototypeDeclarationParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Project__ImportsAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getImportsImportParserRuleCall_10_0()); }
	ruleImport{ after(grammarAccess.getProjectAccess().getImportsImportParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Project__WrappersAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getWrappersWrapperDeclarationParserRuleCall_11_0()); }
	rulewrapperDeclaration{ after(grammarAccess.getProjectAccess().getWrappersWrapperDeclarationParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getLanguageDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDefineTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineType__TypenameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineTypeAccess().getTypenameDataTypeCrossReference_3_0()); }
(
{ before(grammarAccess.getDefineTypeAccess().getTypenameDataTypeIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getDefineTypeAccess().getTypenameDataTypeIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getDefineTypeAccess().getTypenameDataTypeCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValidityFunctionDeclaration__TypenameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidityFunctionDeclarationAccess().getTypenameDataTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getValidityFunctionDeclarationAccess().getTypenameDataTypeIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getValidityFunctionDeclarationAccess().getTypenameDataTypeIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getValidityFunctionDeclarationAccess().getTypenameDataTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValidityFunctionDeclaration__FctNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidityFunctionDeclarationAccess().getFctNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getValidityFunctionDeclarationAccess().getFctNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getBasicTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__IncludesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicTypeAccess().getIncludesIncludeDeclParserRuleCall_3_0()); }
	ruleincludeDecl{ after(grammarAccess.getBasicTypeAccess().getIncludesIncludeDeclParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__LanguagesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicTypeAccess().getLanguagesLanguageDeclParserRuleCall_4_0()); }
	rulelanguageDecl{ after(grammarAccess.getBasicTypeAccess().getLanguagesLanguageDeclParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__CastsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicTypeAccess().getCastsLexicalCastDeclParserRuleCall_5_0()); }
	rulelexicalCastDecl{ after(grammarAccess.getBasicTypeAccess().getCastsLexicalCastDeclParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeDecl__LangAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeDeclAccess().getLangLanguageDeclarationCrossReference_1_0()); }
(
{ before(grammarAccess.getIncludeDeclAccess().getLangLanguageDeclarationIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getIncludeDeclAccess().getLangLanguageDeclarationIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getIncludeDeclAccess().getLangLanguageDeclarationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeDecl__IncludeNameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeDeclAccess().getIncludeNameSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getIncludeDeclAccess().getIncludeNameSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDecl__LangAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageDeclAccess().getLangLanguageDeclarationCrossReference_1_0()); }
(
{ before(grammarAccess.getLanguageDeclAccess().getLangLanguageDeclarationIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getLanguageDeclAccess().getLangLanguageDeclarationIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getLanguageDeclAccess().getLangLanguageDeclarationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDecl__TransAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageDeclAccess().getTransSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getLanguageDeclAccess().getTransSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageDecl__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageDeclAccess().getValueSTRINGTerminalRuleCall_5_0()); }
	RULE_STRING{ after(grammarAccess.getLanguageDeclAccess().getValueSTRINGTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LexicalCastDecl__LangAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLexicalCastDeclAccess().getLangLanguageDeclarationCrossReference_1_0()); }
(
{ before(grammarAccess.getLexicalCastDeclAccess().getLangLanguageDeclarationIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getLexicalCastDeclAccess().getLangLanguageDeclarationIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getLexicalCastDeclAccess().getLangLanguageDeclarationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LexicalCastDecl__CastAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLexicalCastDeclAccess().getCastSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getLexicalCastDeclAccess().getCastSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__TypenameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeAccess().getTypenameDataTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getArrayTypeAccess().getTypenameDataTypeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getArrayTypeAccess().getTypenameDataTypeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getArrayTypeAccess().getTypenameDataTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeAccess().getNameIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getArrayTypeAccess().getNameIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__IndicesAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeAccess().getIndicesIndexParserRuleCall_6_0()); }
	ruleindex{ after(grammarAccess.getArrayTypeAccess().getIndicesIndexParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__IndicesAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeAccess().getIndicesIndexParserRuleCall_7_1_0()); }
	ruleindex{ after(grammarAccess.getArrayTypeAccess().getIndicesIndexParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VectorType__TypenameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorTypeAccess().getTypenameDataTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getVectorTypeAccess().getTypenameDataTypeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getVectorTypeAccess().getTypenameDataTypeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getVectorTypeAccess().getTypenameDataTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VectorType__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorTypeAccess().getNameIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getVectorTypeAccess().getNameIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__KeytypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getKeytypeDataTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getMapTypeAccess().getKeytypeDataTypeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getMapTypeAccess().getKeytypeDataTypeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getMapTypeAccess().getKeytypeDataTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__ValtypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getValtypeDataTypeCrossReference_4_0()); }
(
{ before(grammarAccess.getMapTypeAccess().getValtypeDataTypeIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getMapTypeAccess().getValtypeDataTypeIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getMapTypeAccess().getValtypeDataTypeCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__NameAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getNameIDTerminalRuleCall_6_0()); }
	RULE_ID{ after(grammarAccess.getMapTypeAccess().getNameIDTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStructTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__IndicesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getIndicesIndexParserRuleCall_2_1_0()); }
	ruleindex{ after(grammarAccess.getStructTypeAccess().getIndicesIndexParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__IndicesAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getIndicesIndexParserRuleCall_2_2_1_0()); }
	ruleindex{ after(grammarAccess.getStructTypeAccess().getIndicesIndexParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__ParametersAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getParametersStructElementParserRuleCall_4_0()); }
	rulestructElement{ after(grammarAccess.getStructTypeAccess().getParametersStructElementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructElement__TypenameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructElementAccess().getTypenameDataTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getStructElementAccess().getTypenameDataTypeIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getStructElementAccess().getTypenameDataTypeIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getStructElementAccess().getTypenameDataTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructElement__IndicesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructElementAccess().getIndicesIndexParserRuleCall_1_1_0()); }
	ruleindex{ after(grammarAccess.getStructElementAccess().getIndicesIndexParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructElement__IndicesAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructElementAccess().getIndicesIndexParserRuleCall_1_2_1_0()); }
	ruleindex{ after(grammarAccess.getStructElementAccess().getIndicesIndexParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructElement__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructElementAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getStructElementAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructElement__HasInitValueAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructElementAccess().getHasInitValueEqualsSignKeyword_3_0_0()); }
(
{ before(grammarAccess.getStructElementAccess().getHasInitValueEqualsSignKeyword_3_0_0()); }

	'=' 

{ after(grammarAccess.getStructElementAccess().getHasInitValueEqualsSignKeyword_3_0_0()); }
)

{ after(grammarAccess.getStructElementAccess().getHasInitValueEqualsSignKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructElement__InitValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructElementAccess().getInitValueSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getStructElementAccess().getInitValueSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Index__DimAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getDimIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getIndexAccess().getDimIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Index__HasValueAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getHasValueEqualsSignKeyword_1_0_0()); }
(
{ before(grammarAccess.getIndexAccess().getHasValueEqualsSignKeyword_1_0_0()); }

	'=' 

{ after(grammarAccess.getIndexAccess().getHasValueEqualsSignKeyword_1_0_0()); }
)

{ after(grammarAccess.getIndexAccess().getHasValueEqualsSignKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Index__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getValueINTTerminalRuleCall_1_1_0()); }
	RULE_INT{ after(grammarAccess.getIndexAccess().getValueINTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getUnionTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeAccess().getElementsDataTypeCrossReference_3_0()); }
(
{ before(grammarAccess.getUnionTypeAccess().getElementsDataTypeIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getUnionTypeAccess().getElementsDataTypeIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getUnionTypeAccess().getElementsDataTypeCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__ElementsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeAccess().getElementsDataTypeCrossReference_4_1_0()); }
(
{ before(grammarAccess.getUnionTypeAccess().getElementsDataTypeIDTerminalRuleCall_4_1_0_1()); }
	RULE_ID{ after(grammarAccess.getUnionTypeAccess().getElementsDataTypeIDTerminalRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getUnionTypeAccess().getElementsDataTypeCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__LangAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getLangLanguageDeclarationCrossReference_3_0()); }
(
{ before(grammarAccess.getFunctionDeclarationAccess().getLangLanguageDeclarationIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getFunctionDeclarationAccess().getLangLanguageDeclarationIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getFunctionDeclarationAccess().getLangLanguageDeclarationCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__ArgsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getArgsArgumentsDeclarationParserRuleCall_6_0()); }
	ruleargumentsDeclaration{ after(grammarAccess.getFunctionDeclarationAccess().getArgsArgumentsDeclarationParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsDeclaration__ArgumentsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsDeclarationAccess().getArgumentsArgParserRuleCall_0_0()); }
	rulearg{ after(grammarAccess.getArgumentsDeclarationAccess().getArgumentsArgParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsDeclaration__ArgumentsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsDeclarationAccess().getArgumentsArgParserRuleCall_1_0()); }
	rulearg{ after(grammarAccess.getArgumentsDeclarationAccess().getArgumentsArgParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__ModifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getModifierAlternatives_0_0()); }
(rule__Arg__ModifierAlternatives_0_0)
{ after(grammarAccess.getArgAccess().getModifierAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getTypeDataTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getArgAccess().getTypeDataTypeIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getArgAccess().getTypeDataTypeIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getArgAccess().getTypeDataTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getArgAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessingDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessingDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getProcessingDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessingDeclaration__ArgsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessingDeclarationAccess().getArgsArgumentsDeclarationParserRuleCall_3_0()); }
	ruleargumentsDeclaration{ after(grammarAccess.getProcessingDeclarationAccess().getArgsArgumentsDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessingDeclaration__LocalParametersAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessingDeclarationAccess().getLocalParametersLocalParameterDeclarationParserRuleCall_6_0()); }
	rulelocalParameterDeclaration{ after(grammarAccess.getProcessingDeclarationAccess().getLocalParametersLocalParameterDeclarationParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessingDeclaration__LocalEventsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessingDeclarationAccess().getLocalEventsLocalEventDeclarationParserRuleCall_7_0()); }
	rulelocalEventDeclaration{ after(grammarAccess.getProcessingDeclarationAccess().getLocalEventsLocalEventDeclarationParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessingDeclaration__StatementsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessingDeclarationAccess().getStatementsStatementParserRuleCall_8_0()); }
	rulestatement{ after(grammarAccess.getProcessingDeclarationAccess().getStatementsStatementParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__CallAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getCallAlternatives_0()); }
(rule__Statement__CallAlternatives_0)
{ after(grammarAccess.getStatementAccess().getCallAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameterDeclaration__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterDeclarationAccess().getTypeDataTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getLocalParameterDeclarationAccess().getTypeDataTypeIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getLocalParameterDeclarationAccess().getTypeDataTypeIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getLocalParameterDeclarationAccess().getTypeDataTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameterDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getLocalParameterDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameterDeclaration__HasValueAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterDeclarationAccess().getHasValueEqualsSignKeyword_3_0_0()); }
(
{ before(grammarAccess.getLocalParameterDeclarationAccess().getHasValueEqualsSignKeyword_3_0_0()); }

	'=' 

{ after(grammarAccess.getLocalParameterDeclarationAccess().getHasValueEqualsSignKeyword_3_0_0()); }
)

{ after(grammarAccess.getLocalParameterDeclarationAccess().getHasValueEqualsSignKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalParameterDeclaration__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalParameterDeclarationAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getLocalParameterDeclarationAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ifblock__EventNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfblockAccess().getEventNameLocalEventDeclarationCrossReference_1_0()); }
(
{ before(grammarAccess.getIfblockAccess().getEventNameLocalEventDeclarationIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getIfblockAccess().getEventNameLocalEventDeclarationIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getIfblockAccess().getEventNameLocalEventDeclarationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ifblock__IfBlocksAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfblockAccess().getIfBlocksStatementParserRuleCall_4_0()); }
	rulestatement{ after(grammarAccess.getIfblockAccess().getIfBlocksStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ifblock__HasElseAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfblockAccess().getHasElseElseKeyword_6_0_0()); }
(
{ before(grammarAccess.getIfblockAccess().getHasElseElseKeyword_6_0_0()); }

	'else' 

{ after(grammarAccess.getIfblockAccess().getHasElseElseKeyword_6_0_0()); }
)

{ after(grammarAccess.getIfblockAccess().getHasElseElseKeyword_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ifblock__ElseBlocksAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfblockAccess().getElseBlocksStatementParserRuleCall_6_2_0()); }
	rulestatement{ after(grammarAccess.getIfblockAccess().getElseBlocksStatementParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Whileblock__EventNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileblockAccess().getEventNameLocalEventDeclarationCrossReference_1_0()); }
(
{ before(grammarAccess.getWhileblockAccess().getEventNameLocalEventDeclarationIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getWhileblockAccess().getEventNameLocalEventDeclarationIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getWhileblockAccess().getEventNameLocalEventDeclarationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Whileblock__BlocksAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileblockAccess().getBlocksStatementParserRuleCall_4_0()); }
	rulestatement{ after(grammarAccess.getWhileblockAccess().getBlocksStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getNameFuncProcCrossReference_1_0()); }
(
{ before(grammarAccess.getFunctionCallAccess().getNameFuncProcIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getFunctionCallAccess().getNameFuncProcIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getFunctionCallAccess().getNameFuncProcCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ArgumentsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getArgumentsFargParserRuleCall_3_0_0()); }
	rulefarg{ after(grammarAccess.getFunctionCallAccess().getArgumentsFargParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ArgumentsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getArgumentsFargParserRuleCall_3_1_1_0()); }
	rulefarg{ after(grammarAccess.getFunctionCallAccess().getArgumentsFargParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrototypeDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrototypeDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPrototypeDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrototypeDeclaration__SuperTypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrototypeDeclarationAccess().getSuperTypePrototypeDeclarationCrossReference_2_1_0()); }
(
{ before(grammarAccess.getPrototypeDeclarationAccess().getSuperTypePrototypeDeclarationIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getPrototypeDeclarationAccess().getSuperTypePrototypeDeclarationIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getPrototypeDeclarationAccess().getSuperTypePrototypeDeclarationCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrototypeDeclaration__DefinitionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrototypeDeclarationAccess().getDefinitionsArchitectureElementParserRuleCall_4_0()); }
	rulearchitectureElement{ after(grammarAccess.getPrototypeDeclarationAccess().getDefinitionsArchitectureElementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSignalDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEventDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__ConditionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getConditionsEventConditionParserRuleCall_3_0()); }
	ruleeventCondition{ after(grammarAccess.getEventDeclarationAccess().getConditionsEventConditionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__ConditionsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getConditionsEventConditionParserRuleCall_4_1_0()); }
	ruleeventCondition{ after(grammarAccess.getEventDeclarationAccess().getConditionsEventConditionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventCondition__LeftPartAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventConditionAccess().getLeftPartIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getEventConditionAccess().getLeftPartIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventCondition__CondAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventConditionAccess().getCondAlternatives_1_0()); }
(rule__EventCondition__CondAlternatives_1_0)
{ after(grammarAccess.getEventConditionAccess().getCondAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventCondition__RightPartIAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventConditionAccess().getRightPartIIDTerminalRuleCall_2_0_0()); }
	RULE_ID{ after(grammarAccess.getEventConditionAccess().getRightPartIIDTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventCondition__RightPartNAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventConditionAccess().getRightPartNINTTerminalRuleCall_2_1_0()); }
	RULE_INT{ after(grammarAccess.getEventConditionAccess().getRightPartNINTTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventCondition__RightPartSAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventConditionAccess().getRightPartSSTRINGTerminalRuleCall_2_2_0()); }
	RULE_STRING{ after(grammarAccess.getEventConditionAccess().getRightPartSSTRINGTerminalRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__TypeNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getTypeNameDataTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getParameterDeclarationAccess().getTypeNameDataTypeIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getParameterDeclarationAccess().getTypeNameDataTypeIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getParameterDeclarationAccess().getTypeNameDataTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__HasNbWAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getHasNbWNumberSignKeyword_2_0_0()); }
(
{ before(grammarAccess.getParameterDeclarationAccess().getHasNbWNumberSignKeyword_2_0_0()); }

	'#' 

{ after(grammarAccess.getParameterDeclarationAccess().getHasNbWNumberSignKeyword_2_0_0()); }
)

{ after(grammarAccess.getParameterDeclarationAccess().getHasNbWNumberSignKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__NbwAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getNbwINTTerminalRuleCall_2_2_0()); }
	RULE_INT{ after(grammarAccess.getParameterDeclarationAccess().getNbwINTTerminalRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__HasInfiniteWriterAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getHasInfiniteWriterExclamationMarkKeyword_3_0()); }
(
{ before(grammarAccess.getParameterDeclarationAccess().getHasInfiniteWriterExclamationMarkKeyword_3_0()); }

	'!' 

{ after(grammarAccess.getParameterDeclarationAccess().getHasInfiniteWriterExclamationMarkKeyword_3_0()); }
)

{ after(grammarAccess.getParameterDeclarationAccess().getHasInfiniteWriterExclamationMarkKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__HasValueAssignment_5_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getHasValueEqualsSignKeyword_5_0_0_0()); }
(
{ before(grammarAccess.getParameterDeclarationAccess().getHasValueEqualsSignKeyword_5_0_0_0()); }

	'=' 

{ after(grammarAccess.getParameterDeclarationAccess().getHasValueEqualsSignKeyword_5_0_0_0()); }
)

{ after(grammarAccess.getParameterDeclarationAccess().getHasValueEqualsSignKeyword_5_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__ValueAssignment_5_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getValueSTRINGTerminalRuleCall_5_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getParameterDeclarationAccess().getValueSTRINGTerminalRuleCall_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__HasConfigAssignment_5_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getHasConfigEqualsSignKeyword_5_1_0_0()); }
(
{ before(grammarAccess.getParameterDeclarationAccess().getHasConfigEqualsSignKeyword_5_1_0_0()); }

	'=' 

{ after(grammarAccess.getParameterDeclarationAccess().getHasConfigEqualsSignKeyword_5_1_0_0()); }
)

{ after(grammarAccess.getParameterDeclarationAccess().getHasConfigEqualsSignKeyword_5_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__HasConfigWithDefaultValueAssignment_5_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getHasConfigWithDefaultValueEqualsSignKeyword_5_2_0_0()); }
(
{ before(grammarAccess.getParameterDeclarationAccess().getHasConfigWithDefaultValueEqualsSignKeyword_5_2_0_0()); }

	'=' 

{ after(grammarAccess.getParameterDeclarationAccess().getHasConfigWithDefaultValueEqualsSignKeyword_5_2_0_0()); }
)

{ after(grammarAccess.getParameterDeclarationAccess().getHasConfigWithDefaultValueEqualsSignKeyword_5_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__ValueAssignment_5_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getValueSTRINGTerminalRuleCall_5_2_2_0()); }
	RULE_STRING{ after(grammarAccess.getParameterDeclarationAccess().getValueSTRINGTerminalRuleCall_5_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStatesetDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__StatesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getStatesStateDeclarationParserRuleCall_3_0()); }
	rulestateDeclaration{ after(grammarAccess.getStatesetDeclarationAccess().getStatesStateDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__StatesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getStatesStateDeclarationParserRuleCall_5_0()); }
	rulestateDeclaration{ after(grammarAccess.getStatesetDeclarationAccess().getStatesStateDeclarationParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__StatesAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getStatesStateDeclarationParserRuleCall_6_1_0()); }
	rulestateDeclaration{ after(grammarAccess.getStatesetDeclarationAccess().getStatesStateDeclarationParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__InitAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getInitStateDeclarationCrossReference_9_0()); }
(
{ before(grammarAccess.getStatesetDeclarationAccess().getInitStateDeclarationIDTerminalRuleCall_9_0_1()); }
	RULE_ID{ after(grammarAccess.getStatesetDeclarationAccess().getInitStateDeclarationIDTerminalRuleCall_9_0_1()); }
)
{ after(grammarAccess.getStatesetDeclarationAccess().getInitStateDeclarationCrossReference_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatesetDeclaration__TransitionsAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesetDeclarationAccess().getTransitionsTransitionDeclarationParserRuleCall_11_0()); }
	ruletransitionDeclaration{ after(grammarAccess.getStatesetDeclarationAccess().getTransitionsTransitionDeclarationParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getStateDeclarationAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__FromAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getFromIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getTransitionDeclarationAccess().getFromIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__ToAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getToIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getTransitionDeclarationAccess().getToIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__EvtAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getEvtIDTerminalRuleCall_6_0()); }
	RULE_ID{ after(grammarAccess.getTransitionDeclarationAccess().getEvtIDTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__RaiseAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getRaiseRaiseKeyword_7_0_0()); }
(
{ before(grammarAccess.getTransitionDeclarationAccess().getRaiseRaiseKeyword_7_0_0()); }

	'raise' 

{ after(grammarAccess.getTransitionDeclarationAccess().getRaiseRaiseKeyword_7_0_0()); }
)

{ after(grammarAccess.getTransitionDeclarationAccess().getRaiseRaiseKeyword_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__SigAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getSigIDTerminalRuleCall_7_1_0()); }
	RULE_ID{ after(grammarAccess.getTransitionDeclarationAccess().getSigIDTerminalRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__TypeNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getTypeNamePrototypeDeclarationCrossReference_1_0()); }
(
{ before(grammarAccess.getInstanceDeclarationAccess().getTypeNamePrototypeDeclarationIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getInstanceDeclarationAccess().getTypeNamePrototypeDeclarationIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getInstanceDeclarationAccess().getTypeNamePrototypeDeclarationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDeclaration__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceDeclarationAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getInstanceDeclarationAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__WwhenAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getWwhenWhenKeyword_0_0_0()); }
(
{ before(grammarAccess.getInteractionDeclarationAccess().getWwhenWhenKeyword_0_0_0()); }

	'when' 

{ after(grammarAccess.getInteractionDeclarationAccess().getWwhenWhenKeyword_0_0_0()); }
)

{ after(grammarAccess.getInteractionDeclarationAccess().getWwhenWhenKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__StatesetAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getStatesetIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getInteractionDeclarationAccess().getStatesetIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__WstateAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getWstateIDTerminalRuleCall_0_4_0()); }
	RULE_ID{ after(grammarAccess.getInteractionDeclarationAccess().getWstateIDTerminalRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__IifAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getIifIfKeyword_1_0_0()); }
(
{ before(grammarAccess.getInteractionDeclarationAccess().getIifIfKeyword_1_0_0()); }

	'if' 

{ after(grammarAccess.getInteractionDeclarationAccess().getIifIfKeyword_1_0_0()); }
)

{ after(grammarAccess.getInteractionDeclarationAccess().getIifIfKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__EventAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getEventIDTerminalRuleCall_1_2_0()); }
	RULE_ID{ after(grammarAccess.getInteractionDeclarationAccess().getEventIDTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__IcallsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionDeclarationAccess().getIcallsInteractionCallParserRuleCall_3_0()); }
	ruleinteractionCall{ after(grammarAccess.getInteractionDeclarationAccess().getIcallsInteractionCallParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionCall__FctNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionCallAccess().getFctNameFuncProcCrossReference_1_0()); }
(
{ before(grammarAccess.getInteractionCallAccess().getFctNameFuncProcIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getInteractionCallAccess().getFctNameFuncProcIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getInteractionCallAccess().getFctNameFuncProcCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionCall__ArgumentsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionCallAccess().getArgumentsFargParserRuleCall_3_0_0()); }
	rulefarg{ after(grammarAccess.getInteractionCallAccess().getArgumentsFargParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionCall__ArgumentsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractionCallAccess().getArgumentsFargParserRuleCall_3_1_1_0()); }
	rulefarg{ after(grammarAccess.getInteractionCallAccess().getArgumentsFargParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Farg__VarNameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFargAccess().getVarNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getFargAccess().getVarNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__TypeNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getTypeNameDataTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getReferenceDeclarationAccess().getTypeNameDataTypeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getReferenceDeclarationAccess().getTypeNameDataTypeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getReferenceDeclarationAccess().getTypeNameDataTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__UpwayAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getUpwayAtParserRuleCall_4_0()); }
	ruleat{ after(grammarAccess.getReferenceDeclarationAccess().getUpwayAtParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__NameAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getNameQualifiedNameParserRuleCall_5_0()); }
	rulequalifiedName{ after(grammarAccess.getReferenceDeclarationAccess().getNameQualifiedNameParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__AliasAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getAliasIDTerminalRuleCall_6_1_0()); }
	RULE_ID{ after(grammarAccess.getReferenceDeclarationAccess().getAliasIDTerminalRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getQualifiedNameAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getQualifiedNameAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getWrapperDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__LinkAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getLinkSTRINGTerminalRuleCall_5_0()); }
	RULE_STRING{ after(grammarAccess.getWrapperDeclarationAccess().getLinkSTRINGTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__FunctionsAssignment_9_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getFunctionsIDTerminalRuleCall_9_0_0()); }
	RULE_ID{ after(grammarAccess.getWrapperDeclarationAccess().getFunctionsIDTerminalRuleCall_9_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__FunctionsAssignment_9_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getFunctionsIDTerminalRuleCall_9_1_1_0()); }
	RULE_ID{ after(grammarAccess.getWrapperDeclarationAccess().getFunctionsIDTerminalRuleCall_9_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__ObjectsAssignment_13_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getObjectsIDTerminalRuleCall_13_0_0()); }
	RULE_ID{ after(grammarAccess.getWrapperDeclarationAccess().getObjectsIDTerminalRuleCall_13_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__ObjectsAssignment_13_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getObjectsIDTerminalRuleCall_13_1_1_0()); }
	RULE_ID{ after(grammarAccess.getWrapperDeclarationAccess().getObjectsIDTerminalRuleCall_13_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__LibrariesAssignment_17_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getLibrariesSTRINGTerminalRuleCall_17_0_0()); }
	RULE_STRING{ after(grammarAccess.getWrapperDeclarationAccess().getLibrariesSTRINGTerminalRuleCall_17_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__LibrariesAssignment_17_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getLibrariesSTRINGTerminalRuleCall_17_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getWrapperDeclarationAccess().getLibrariesSTRINGTerminalRuleCall_17_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__TestsAssignment_21_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getTestsIDTerminalRuleCall_21_0_0()); }
	RULE_ID{ after(grammarAccess.getWrapperDeclarationAccess().getTestsIDTerminalRuleCall_21_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WrapperDeclaration__TestsAssignment_21_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWrapperDeclarationAccess().getTestsIDTerminalRuleCall_21_1_1_0()); }
	RULE_ID{ after(grammarAccess.getWrapperDeclarationAccess().getTestsIDTerminalRuleCall_21_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


