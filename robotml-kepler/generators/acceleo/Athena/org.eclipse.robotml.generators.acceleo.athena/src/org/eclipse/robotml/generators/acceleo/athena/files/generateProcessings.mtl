[comment encoding = UTF-8 /]
[module generateProcessings('http://www.eclipse.org/uml2/3.0.0/UML')/]

[import org::eclipse::robotml::generators::acceleo::athena::mmqueries::MMSpecificQueries/]

[comment]Search all processing in the model (including imported package)[/comment]
[template public generateProcessings(model : Model)]
[let elements : Sequence(NamedElement) = getBehaviorFromModel(model)]
[for(element : NamedElement | elements)]
[if(element.oclIsKindOf(OpaqueBehavior))]
[let behavior : OpaqueBehavior = element.oclAsType(OpaqueBehavior)]
[generateProcessingDecl(model, behavior)/]
[/let]
[/if]
[/for]
[/let]
[/template]

[comment]Generate the processing header[/comment]
[template private generateProcessingDecl(model : Model, processing : OpaqueBehavior)]
[if(not processing.oclIsKindOf(FunctionBehavior) and not isTransitionBehavior(processing, model))]
//[processing.name/]
[if(hasComment(processing))]
[getCommentFromElement(processing)/]
[/if]
[let feature : BehavioralFeature = processing.specification]
[if(feature.oclIsKindOf(Operation))]
processing [feature.name/] [if(feature.ownedParameter->isEmpty() =(true))]( ) begin[else](
[for(param : Parameter | feature.ownedParameter)]
						[param.direction/] [param.type.name/] [param.name.toLower()/][if((feature.ownedParameter->indexOf(param).toString().equalsIgnoreCase(feature.ownedParameter->size().toString())))] ) begin[/if]		
[/for]
[/if]
[generateProcessingBody(model, processing)/]
end
[/if]
[/let]
[/if]
[/template]

[template private generateProcessingBody(model : Model, proc : OpaqueBehavior)]
[comment]If language is specified as Athena, so print the behavior body in the string generation[/comment]
[getBehaviorBody(proc)/]
[/template]
