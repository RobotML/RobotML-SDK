	
	//
	// Model ProteusModel
	//
	
	language CPP
	
	//
	// Data Types description
	//
	
	//
	// base Types (predefined)
	//
	
	basic int64 begin
		language < CPP > "long int" = "0"
	end
	
	basic int32 begin
		language < CPP > "int" = "0"
	end
	
	basic int16 begin
		language < CPP > "short int" = "0"
	end
	
	basic int8 begin
		language < CPP > "char" = "0"
	end
	
	basic uint64 begin
		language < CPP > "unsigned long int" = "0"
	end
	
	basic uint32 begin
		language < CPP > "unsigned int" = "0"
	end
	
	basic uint16 begin
		language < CPP > "unsigned short int" = "0"
	end
	
	basic uint8 begin
		language < CPP > "unsigned char" = "0"
	end
	
	basic real32 begin
		language < CPP > "float" = "0"
	end
	
	basic real64 begin
		language < CPP > "double" = "0"
	end
	
	//
	// User defined types
	//
	
	// Distance
	// Command
	
			
	
	//
	// Functions
	//
		
		
	
	//
	// Processings 
	//
		
		
	
	//
	// Prototypes
	//
			
	//
	// Prototypes generiques
	// 
	
	//
	prototype System 
	
	end
	
	//
	prototype Sensor is System 
	
	end
	
	//
	prototype Actuator is System
	
	end
	
	// RoboCab 
	prototype RoboCab is System
	
		// references
		
		// Parameters
	
		// Instances
	
	end 
	
	// Motor 
	prototype Motor is Actuator
	
		// references
		// Input dataflow port MotorCmdIn
		reference <Command> @challengerSystem.MotorCmd as MotorCmdIn
		
		// Parameters
	
		// Instances
	
	end 
	
	// LIDAR 
	prototype LIDAR is Sensor
	
		// references
		// Output dataflow port LIDARout
		parameter <Distance> LIDARout
		
		// Parameters
	
		// Instances
	
	end 
	
	// RoboCab 
	prototype RoboCab is System
	
		// references
		
		// Parameters
	
		// Instances
		instance <LIDAR> lidar
		instance <Motor> motor
		instance <Challenger> challengerSystem
	
		// Connections between sub-components (implemented references)
		// Connector1 --- challengerSystem.MotorCmd.connectTo(motor.MotorCmdIn)
		// Connector0 --- lidar.LIDARout.connectTo(challengerSystem.in)
	
	end 
	
	// Challenger 
	prototype Challenger is System
	
		// references
		// Output dataflow port MotorCmd
		parameter <Command> MotorCmd
		// Input dataflow port in
		reference <Distance> @lidar.LIDARout as in
		
		// Parameters
	
		// Instances
	
	end 
	
	
	
	
