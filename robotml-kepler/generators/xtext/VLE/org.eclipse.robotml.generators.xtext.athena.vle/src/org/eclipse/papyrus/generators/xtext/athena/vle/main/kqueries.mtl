[comment encoding = UTF-8 /]
[module kqueries('http://www.xtext.org/AthenaDSL')]


[query public isEvent(elt : athenaDSL::architectureElement) : Boolean = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'isEvent(org.xtext.athenaDSL.architectureElement)', Sequence{elt}) 
/]

[query public isSignal(elt : athenaDSL::architectureElement) : Boolean = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'isSignal(org.xtext.athenaDSL.architectureElement)', Sequence{elt}) 
/]

[query public isAnInteraction(elt : athenaDSL::architectureElement) : Boolean = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'isAnInteraction(org.xtext.athenaDSL.architectureElement)', Sequence{elt}) 
/]

[query public isInstance(elt : athenaDSL::architectureElement) : Boolean = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'isInstance(org.xtext.athenaDSL.architectureElement)', Sequence{elt}) 
/]

[query public getInstance(elt : athenaDSL::architectureElement) : instanceDeclaration = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'isAnInteraction(org.xtext.athenaDSL.architectureElement)', Sequence{elt}) 
/]

[query public isStateSet(elt : athenaDSL::architectureElement) : Boolean = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'isStateSet(org.xtext.athenaDSL.architectureElement)', Sequence{elt}) 
/]

[query public getXmlArrayDims(elt : athenaDSL::arrayType) : String = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'getXmlArrayDims(org.xtext.athenaDSL.arrayType)', Sequence{elt}) 
/]

[query public getXmlStructDims(elt : athenaDSL::structType) : String = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'getXmlStructDims(org.xtext.athenaDSL.structType)', Sequence{elt}) 
/]

[query public getStateSetStates(elt : athenaDSL::statesetDeclaration) : String = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'getStateSetStates(org.xtext.athenaDSL.statesetDeclaration)', Sequence{elt}) 
/]

[query public getFunctorDeclaration(elt : athenaDSL::FuncProc) : String = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'getFunctorDeclaration(org.xtext.athenaDSL.FuncProc)', Sequence{elt}) 
/]

[query public getTypeIndexInUnion(union : athenaDSL::unionType, type : athenaDSL::DataType) : String =	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'getTypeIndexInUnion(org.xtext.athenaDSL.unionType,org.xtext.athenaDSL.DataType)', Sequence{union, type}) 
/]

[query public hasDynamicArrayElements(type : athenaDSL::structType) : Boolean = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'hasDynamicArrayElements(org.xtext.athenaDSL.structType)', Sequence{type}) 
/]

[query public getVectorDatatypeName(type : athenaDSL::vectorType) : String = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'getVectorDatatypeName(org.xtext.athenaDSL.vectorType)', Sequence{type}) 
/]

[query public isCPPFunction(fdecl : functionDeclaration) : Boolean = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'isCPPFunction(org.xtext.athenaDSL.functionDeclaration)', Sequence{fdecl}) 
/]

[query public getCPPFunctionSignature(fdecl : functionDeclaration) : String = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'getCPPFunctionSignature(org.xtext.athenaDSL.functionDeclaration)', Sequence{fdecl}) 
/]


[query public getCPPLexicalCast(type : athenaDSL::basicType) : String = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'getCPPLexicalCast(org.xtext.athenaDSL.basicType)', Sequence{type}) 
/]

[query  public getCondition(cond : eventCondition) : String = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'getCondition(org.xtext.athenaDSL.eventCondition)', Sequence{cond}) 
/]

[query  public getFunctionCallSignature(call : interactionCall) : String = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'getFunctionCallSignature(org.xtext.athenaDSL.interactionCall)', Sequence{call}) 
/]

[query  public getArgumentDeclaration(p : Project, proto : prototypeDeclaration, call : interactionCall) : String = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'getArgumentDeclaration(org.xtext.athenaDSL.Project,org.xtext.athenaDSL.prototypeDeclaration,org.xtext.athenaDSL.interactionCall)', Sequence{p,proto,call}) 
/]

[query  public getStringFromQualifiedName(qn : athenaDSL::qualifiedName) : String = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'getStringFromQualifiedName(org.xtext.athenaDSL.qualifiedName)', Sequence{qn}) 
/]

[query  public getArrayAllocationCall(name : String, array : athenaDSL::arrayType) : String = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'getArrayAllocationCall(java.lang.String, org.xtext.athenaDSL.arrayType)', Sequence{name, array}) 
/]

[query  public getParameterNbWriters(param : athenaDSL::parameterDeclaration) : Integer = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'getParameterNbWriters(org.xtext.athenaDSL.parameterDeclaration)', Sequence{param}) 
/]

[query public isFunctionCall(elt : athenaDSL::statement) : Boolean = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'isFunctionCall(org.xtext.athenaDSL.statement)', Sequence{elt}) 
/]

[query public isWhileBlock(elt : athenaDSL::statement) : Boolean = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'isWhileBlock(org.xtext.athenaDSL.statement)', Sequence{elt}) 
/]

[query public isIfBlock(elt : athenaDSL::statement) : Boolean = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'isIfBlock(org.xtext.athenaDSL.statement)', Sequence{elt}) 
/]


[query  public getProcessingFunctionCallSignature(call : functionCall) : String = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'getProcessingFunctionCallSignature(org.xtext.athenaDSL.functionCall)', Sequence{call}) 
/]


[query public getProcessingSignature(proc : ProcessingDeclaration) : String = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'getProcessingSignature(org.xtext.athenaDSL.ProcessingDeclaration)', Sequence{proc}) 
/]

[query public hasStateSet(proto : prototypeDeclaration) : Boolean = 
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.JavaService', 'hasStateSet(org.xtext.athenaDSL.prototypeDeclaration)', Sequence{proto}) 
/]

[query public getSortedDatatypes(project : Project) : Sequence(athenaDSL::DataType) =
	invoke('org.eclipse.papyrus.generators.xtext.athena.vle.main.DataTypeSorter', 'getSortedDatatypes(org.xtext.athenaDSL.Project)', Sequence{project})
/]

