[comment encoding = UTF-8 /]
[module generateProcessings('http://www.eclipse.org/uml2/3.0.0/UML', 'http://www.eclipse.org/papyrus/alf/Alf')/]

[import org::eclipse::robotml::generators::acceleo::athena::mmqueries::MMSpecificQueries/]

[comment]Search all processing in the model (including imported package)[/comment]
[template public generateProcessings(model : Model)]
//Now generate athena processing !!! 
[let elements : Sequence(NamedElement) = getBehaviorFromModel(model)]
[for(element : NamedElement | elements)]
[let behavior : Behavior = element.oclAsType(Behavior)]
	[generateProcessingDecl(model, behavior)/]
[/let]
[/for]
[/let]



[comment] Processing is an operation with behaviral method [/comment]
[comment][let processings : Sequence(NamedElement) = getProcessingFromModel(model)]
[for(processing : NamedElement | processings)]
	[generateProcessingDecl(model, processing)/]
[/for]
[/let][/comment]
[/template]

[comment]Generate the processing header[/comment]
[template private generateProcessingDecl(model : Model, processing : Behavior)]

//[processing.name/]
[if(hasComment(processing))]
[getCommentFromElement(processing)/]
[/if]
processing [processing.name/] [if(processing.ownedParameter->isEmpty() =(true))]( ) begin[else](
[for(param : Parameter | processing.ownedParameter)]
						[param.direction/] [param.type.name/] [param.name/][if(processing.ownedParameter->indexOf(param) = processing.ownedParameter->size())] ) begin[/if]		
[/for]
[/if]
	[generateProcessingBody(model, processing)/]
end
[/template]

[template private generateProcessingBody(model : Model, proc : Behavior)]
[if(proc.oclAsType(OpaqueBehavior) = (true))]
[comment]Opaque behavior, then we check the language parameter to redirect the generation service (ALf/Athena). After we check all body resources.[/comment]
[else]
[comment]Simple behavior, we check the operation specification has exist.[/comment]
[/if]
[/template]
