[comment encoding = UTF-8 /]
[module OrocosQueries('http://www.eclipse.org/uml2/3.0.0/UML')/]

[template public OrocosQueries(something : OclAny)]

[/template]


[query public getRobotMLComponentModels(model : Model) : Sequence(NamedElement) =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getRobotMLComponentModels(org.eclipse.uml2.uml.Model)', Sequence{model})
/]
[query public isActuator(c : Class) : Boolean =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.OrocosQueries', 'isActuator(org.eclipse.uml2.uml.Class)', Sequence{c})
/]

[query public isSensor(c : Class) : Boolean =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.OrocosQueries', 'isSensor(org.eclipse.uml2.uml.Class)', Sequence{c})
/]

[query public getOperations(c : Class) : Sequence(Operation) =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.OrocosQueries', 'getOperations(org.eclipse.uml2.uml.Class)', Sequence{c})
/]

[query public getInterfaceOperations(i : Interface) : Sequence(Operation) =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.OrocosQueries', 'getInterfaceOperations(org.eclipse.uml2.uml.Interface)', Sequence{i})
/]

[query public getProperties(c : Class, elt : Element) : Sequence(Property) =
        invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.OrocosQueries', 'getProperties(org.eclipse.uml2.uml.Class, org.eclipse.uml2.uml.Element)', Sequence{elt})
/]

[query public getServicePort(elt : Element) : Sequence(Port) =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.OrocosQueries', 'getServicePort(org.eclipse.uml2.uml.Element)', Sequence{elt})
/]

[query public getAllPorts(elt : Element) : Sequence(Port) =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.OrocosQueries', 'getAllPorts(org.eclipse.uml2.uml.Element)', Sequence{elt})
/]

[query public getTypeServicePort(port : Port) : String =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.OrocosQueries', 'getTypeServicePort(org.eclipse.uml2.uml.Port)', Sequence{port})
/]

[query public getOperationSignature(op : Operation) : String = 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.OrocosQueries', 'getOperationSignature(org.eclipse.uml2.uml.Operation)', Sequence{op}) 
/]

[query public getOperationSignatureType(op : Operation) : String = 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.OrocosQueries', 'getOperationSignatureType(org.eclipse.uml2.uml.Operation)', Sequence{op}) 
/]

[query public getOperationSignatureName(op : Operation) : String = 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.OrocosQueries', 'getOperationSignatureName(org.eclipse.uml2.uml.Operation)', Sequence{op}) 
/]

[query public getRobotMLInterfaceModels(model : Model) : Sequence(Interface) =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getRobotMLInterfaceModels(org.eclipse.uml2.uml.Model)', Sequence{model})
/]

[query public getNameType(type : Type) : String =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getNameType(org.eclipse.uml2.uml.Type)', Sequence{type})
/]


[query public getOppositePort(port : Port) : Port = 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getOppositePort(org.eclipse.uml2.uml.Port)', Sequence{port}) 
/]

[query public getSensors(model : Model) : Sequence(NamedElement) =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getSensors(org.eclipse.uml2.uml.Model)', Sequence{model})
/]

[query public getSystems(model : Model) : Sequence(NamedElement) =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getSystems(org.eclipse.uml2.uml.Model)', Sequence{model})
/]

[query public getActuators(model : Model) : Sequence(NamedElement) =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getActuators(org.eclipse.uml2.uml.Model)', Sequence{model})
/]
[query public getRootModel(model : Model) : Model =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries','getRootModel(org.eclipse.uml2.uml.Model)', Sequence{model})
/]
[query public getNameSpace(model : Model) : String =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries','getNameSpace(org.eclipse.uml2.uml.Model)', Sequence{model})
/]

[query public isServicePortProvided(sp : Port) : Boolean =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'isInterfaceProvided(org.eclipse.uml2.uml.Port)', Sequence{sp})
/]
[query public getOppositeComponents(elt : Element) :  Sequence(String) =
    invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries','getOppositeComponents(org.eclipse.uml2.uml.Element)', Sequence{elt})
/]
[query public isSystem(c : Class) : Boolean =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'isSystem(org.eclipse.uml2.uml.Class)', Sequence{c})
/]

[query public getclass(cl : Property) : Class = 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getclass(org.eclipse.uml2.uml.Property)', Sequence{cl}) 
/]
[query public isEDataTypeOfPort(port : Port) : Boolean = 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'isEDataTypeOfPort(org.eclipse.uml2.uml.Port)', Sequence{port}) 
/]
[query public isEDataTypeOfProperty(property : Property) : Boolean = 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'isEDataTypeOfProperty(org.eclipse.uml2.uml.Property)', Sequence{property}) 
/]
[query public isEDataTypeOfOperation(operation : Operation) : Boolean = 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'isEDataTypeOfProperty(org.eclipse.uml2.uml.Operation)', Sequence{operation}) 
/]

[query public getProperties1( elt : Element) : Sequence(Property) =
        invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getProperties1(org.eclipse.uml2.uml.Element)', Sequence{elt})
/]

[query public getParentType( elt : Element) : String =
        invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getParentType(org.eclipse.uml2.uml.Element)', Sequence{elt})
/]
[comment  
					OROCOS-LUA libraries 
/]
[query public isADataType( s : String) : Boolean =
        invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'isADataType(java.lang.String)', Sequence{s})
/]

[query public addDataType( s : String) : Boolean =
        invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'addDataType(java.lang.String)', Sequence{s})
/]

[query public setRttLibraries(class : Element) : String =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.OrocosQueries', 'setRttLibraries(org.eclipse.uml2.uml.Element)', Sequence{class})
/]

[query public setLibraries(class : Element) : String =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.OrocosQueries', 'setLibraries(org.eclipse.uml2.uml.Element)', Sequence{class})
/] 

[comment  
					state machines queries 
/]

[query public hasStateMachine(c : Class) : Boolean =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'hasStateMachine(org.eclipse.uml2.uml.Class)', Sequence{c})
/]
[query public getStateMachines(clazz : Class) : Sequence(StateMachine)= 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getStateMachines(org.eclipse.uml2.uml.Class)', Sequence{clazz})
/]
[query public getStates(sm : StateMachine) : Sequence(State)= 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getStates(org.eclipse.uml2.uml.StateMachine)', Sequence{sm})
/]
[query public getTransitions(sm : StateMachine) : Sequence(Transition)= 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getTransitions(org.eclipse.uml2.uml.StateMachine)', Sequence{sm})
/]
[query public hasEntry(s : State) : Boolean= 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'hasEntry(org.eclipse.uml2.uml.State)', Sequence{s})
/]
[query public hasExit(s : State) : Boolean= 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'hasExit(org.eclipse.uml2.uml.State)', Sequence{s})
/]
[query public getEntry(s : State) : String= 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getEntry(org.eclipse.uml2.uml.State)', Sequence{s})
/]
[query public getExit(s : State) : String= 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getExit(org.eclipse.uml2.uml.State)', Sequence{s})
/]
[query public hasTriggers(tr : Transition) : Boolean= 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'hasTriggers(org.eclipse.uml2.uml.State)', Sequence{tr})
/]
[query public isFSM(b: Behavior) : Boolean= 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'isFSM(org.eclipse.uml2.uml.Behavior)', Sequence{b})
/]

[query public hasRun(s : State) : Boolean= 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'hasRun(org.eclipse.uml2.uml.State)', Sequence{s})
/]
[query public getRun(s : State) : String= 
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getRun(org.eclipse.uml2.uml.State)', Sequence{s})
/]

[query public getAllDatatype(class : Element) : String =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getAllDatatype(org.eclipse.uml2.uml.Element)', Sequence{class})
/] 

[query public getLUAType(type: Type) : String =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getLUAType(org.eclipse.uml2.uml.Type)', Sequence{type})
/] 

[query public generateVariables(elt: Element) : String =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'generateVariables(org.eclipse.uml2.uml.Element)', Sequence{elt})
/] 

[query public getFullDataType(type: Type) : String =
	invoke('org.eclipse.acceleo.module.OrocosGenerator.mmqueries.GeneralQueries', 'getFullDataType(org.eclipse.uml2.uml.Type)', Sequence{type})
/] 