[comment encoding = UTF-8 /]
[module generateScript('http://www.xtext.org/AthenaDSL')]

[import org::eclipse::papyrus::generators::xtext::athena::vle::main::DSLQueries /]

[template public generateScript(project : Project)]
[generateScript_sh(project)/]
[generateStartScript_sh(project)/]
[/template]

[template private generateStartScript_sh(project : Project)]
[file('start_vle.sh', false, 'UTF-8')]
#!bin/sh
export LD_LIBRARY_PATH=~/.vle/pkgs/generated/lib
vle-1.1 -P generated -v 3 config.vpz
[/file]
[/template]

[template private generateScript_sh(project : Project)]
[file('install.sh', false, 'UTF-8')]
#!bin/sh
export VLE_HOME=~/.vle
CONFIGURATION_FILE_NAME=config.vpz
GENERATED_PACKAGE_NAME=generated
PACKAGES_PATH=$VLE_HOME/pkgs-1.1
GENERATED_PACKAGE_PATH=$PACKAGES_PATH/$GENERATED_PACKAGE_NAME
GENERATED_OUTPUT_PATH=$GENERATED_PACKAGE_PATH/output
GENERATED_LIB_PATH=$GENERATED_PACKAGE_PATH/lib
export LD_LIBRARY=$GENERATED_LIB_PATH
GENERATED_EXPERIENCE_PATH=$GENERATED_PACKAGE_PATH/exp
GENERATED_PACKAGE_BUILD_PATH=$GENERATED_PACKAGE_PATH/buildvle



echo "*****************************************"
echo "*** VLE simulation package deployment ***"
echo "*****************************************"
cp start_vle.sh ~
#echo "*** Remove old VLE simulation package"
#rm -Rf $GENERATED_PACKAGE_PATH

echo "*** Copy the generated VLE simulation package"
cp -Ru ./$GENERATED_PACKAGE_NAME $PACKAGES_PATH
mkdir $GENERATED_OUTPUT_PATH
mkdir $GENERATED_LIB_PATH

echo "*** Moving to VLE simulation package compilation : $PACKAGES_PATH"
cd $PACKAGES_PATH

echo "*** VLE simulation package configuration"
vle-1.1 -P $GENERATED_PACKAGE_NAME configure

echo "Moving to VLE buiding folder"
cd $GENERATED_PACKAGE_BUILD_PATH

echo "*** Make and install VLE simulation"
make install

if ['['/] $? -eq 0 [']'/]; then
echo "*** Compilation succesfull!!!"
echo "*** Do you want to lauch simulation ?"
echo "	 - 1 : VLE console"
echo "	 - 2 : GVLE"
echo "   - 3 : No i don't"
read -p "Please choose:" selection
if ['['/] $selection = "1" [']'/]; then
vle-1.1 -P $GENERATED_PACKAGE_NAME -v 3 $CONFIGURATION_FILE_NAME
elif ['['/]$selection = "2" [']'/]; then
gvle $GENERATED_EXPERIENCE_PATH/$CONFIGURATION_FILE_NAME &
else
echo ":-("
cd ~
fi
else
echo "*** Compilation error correct it and retry! :-("
fi
[/file]
[/template]